[{"path":"https://docs.ropensci.org/openalexR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to openalexR","title":"Contributing to openalexR","text":"First, thank considering contribute openalexR! outlines propose change package. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://docs.ropensci.org/openalexR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to openalexR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://docs.ropensci.org/openalexR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to openalexR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://docs.ropensci.org/openalexR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to openalexR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"ropensci/openalexR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://docs.ropensci.org/openalexR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to openalexR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://docs.ropensci.org/openalexR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to openalexR","text":"Please note openalexR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"an-r-package-to-gather-bibliographic-data-from-openalex","dir":"Articles","previous_headings":"","what":"An R-package to gather bibliographic data from OpenAlex","title":"A Brief Introduction to openalexR","text":"openalexR helps interface OpenAlex API retrieve bibliographic infomation publications, authors, institutions, sources, funders, publishers, topics concepts 5 main functions: oa_query(): generates valid query, written following OpenAlex API syntax, set arguments provided user. oa_request(): downloads collection entities matching query created oa_query() manually written user, returns JSON object list format. oa2df(): converts JSON object classical bibliographic tibble/data frame. oa_fetch(): composes three functions user can execute everything one step, .e., oa_query |> oa_request |> oa2df oa_random(): get random entity, e.g., oa_random(\"works\") gives different work time run ","code":"library(openalexR) library(dplyr)"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"works-think-papers-publications","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Works (think papers, publications)","title":"A Brief Introduction to openalexR","text":"paper: associated OpenAlex-id W2755950973. know paper’s OpenAlex ID, need passing identifier = <openalex id> argument oa_fetch(): oa_fetch() composition functions: oa_query |> oa_request |> oa2df. results, oa_query() returns query string including OpenAlex endpoint API server address (default). oa_request() downloads bibliographic records matching query. Finally, oa2df() converts final result list tibble. final result complicated tibble, can use show_works() display simplified version:","code":"Aria, M., & Cuccurullo, C. (2017). bibliometrix:  An R-tool for comprehensive science mapping analysis.  Journal of informetrics, 11(4), 959-975. paper_id <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works/W2755950973 dplyr::glimpse(paper_id) ## Rows: 1 ## Columns: 39 ## $ id                          <chr> \"https://openalex.org/W2755950973\" ## $ title                       <chr> \"bibliometrix : An R-tool for comprehensiv… ## $ display_name                <chr> \"bibliometrix : An R-tool for comprehensiv… ## $ author                      <list> [<data.frame[2 x 12]>] ## $ ab                          <chr> \"The use of bibliometrics is gradually ext… ## $ publication_date            <date> 2017-09-12 ## $ so                          <chr> \"Journal of Informetrics\" ## $ so_id                       <chr> \"https://openalex.org/S205292342\" ## $ host_organization           <chr> \"Elsevier BV\" ## $ issn_l                      <chr> \"1751-1577\" ## $ url                         <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" ## $ pdf_url                     <lgl> NA ## $ license                     <lgl> NA ## $ version                     <lgl> NA ## $ first_page                  <chr> \"959\" ## $ last_page                   <chr> \"975\" ## $ volume                      <chr> \"11\" ## $ issue                       <chr> \"4\" ## $ is_oa                       <lgl> FALSE ## $ is_oa_anywhere              <lgl> FALSE ## $ oa_status                   <chr> \"closed\" ## $ oa_url                      <lgl> NA ## $ any_repository_has_fulltext <lgl> FALSE ## $ language                    <chr> \"en\" ## $ grants                      <lgl> NA ## $ cited_by_count              <int> 7406 ## $ counts_by_year              <list> [<data.frame[10 x 2]>] ## $ publication_year            <int> 2017 ## $ cited_by_api_url            <chr> \"https://api.openalex.org/works?filter=ci… ## $ ids                         <list> <\"https://openalex.org/W2755950973\", \"http… ## $ doi                         <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" ## $ type                        <chr> \"article\" ## $ referenced_works            <list> <\"https://openalex.org/W1497199863\", \"htt… ## $ related_works               <list> <\"https://openalex.org/W45233828\", \"https:… ## $ is_paratext                 <lgl> FALSE ## $ is_retracted                <lgl> FALSE ## $ concepts                    <list> [<data.frame[10 x 5]>] ## $ topics                      <list> [<tbl_df[12 x 5]>] ## $ apc                         <list> [<data.frame[2 x 5]>] paper_id %>%    show_works() %>%   knitr::kable()"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"external-id-formats","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"External id formats","title":"A Brief Introduction to openalexR","text":"OpenAlex endpoint accepts OpenAlex IDs external IDs (e.g., DOI, ISSN) several formats, including Digital Object Identifier (DOI) Persistent Identifiers (PIDs).","code":"oa_fetch(   # identifier = \"https://doi.org/10.1016/j.joi.2017.08.007\", # would also work (PIDs)   identifier = \"doi:10.1016/j.joi.2017.08.007\",   entity = \"works\" ) %>%    show_works() %>%   knitr::kable()"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"more-than-one-publicationsauthors","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"More than one publications/authors","title":"A Brief Introduction to openalexR","text":"https://api.openalex.org/authors/https://orcid.org/ know OpenAlex IDs entities, can also feed identifier argument. However, know external identifies, say, DOIs, need use doi filter (either canonical form https://doi.org/ without work):","code":"oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   # identifier = c(\"https://doi.org/10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1016/j.joi.2017.08.007\"), # TODO   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=openalex%3AW2741809807%7CW2755950973 ## Getting 1 page of results with a total of 2 records... oa_fetch(   # identifier = c(\"W2741809807\", \"W2755950973\"),   doi = c(\"10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1093/bioinformatics/btab727\"),   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727 ## Getting 1 page of results with a total of 2 records..."},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"filters","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex > Works (think papers, publications)","what":"Filters","title":"A Brief Introduction to openalexR","text":"cases, interested downloading collection items meet one inclusion/exclusion criteria (filters). Supported filters entity listed . Example: want download works published set authors. can filtering authorships.author.id/author.id authorships.author.orcid/author.orcid attribute (see works attributes): Example: want download works cited 50 times, published 2020 2021, include strings “bibliometric analysis” “science mapping” title. Maybe also want results sorted total citations descending order. Setting argument count_only = TRUE, function oa_request() returns number items matching query without downloading collection. can now download records transform tibble/data frame setting count_only = FALSE (also default value): Read see can shorten two function calls.","code":"oa_fetch(   entity = \"works\",   author.id = c(\"A5048491430\", \"A5023888391\"),   verbose = TRUE ) %>%    show_works() %>%    knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=author.id%3AA5048491430%7CA5023888391 ## Getting 1 page of results with a total of 125 records... ## Warning in oa_request(oa_query(filter = filter_i, multiple_id = multiple_id, :  ## The following work(s) have truncated lists of authors: W4230863633. ## Query each work separately by its identifier to get full list of authors. ## For example: ##   lapply(c(\"W4230863633\"), \\(x) oa_fetch(identifier = x)) ## Details at https://docs.openalex.org/api-entities/authors/limitations. orcids <- c(\"0000-0003-3737-6565\", \"0000-0002-8517-9411\") canonical_orcids <- paste0(\"https://orcid.org/\", orcids) oa_fetch(   entity = \"works\",   author.orcid = canonical_orcids,   verbose = TRUE ) %>%    show_works() %>%    knitr::kable() ## Requesting url: https://api.openalex.org/works?filter=author.orcid%3Ahttps%3A%2F%2Forcid.org%2F0000-0003-3737-6565%7Chttps%3A%2F%2Forcid.org%2F0000-0002-8517-9411 ## Getting 2 pages of results with a total of 320 records... ## Warning in oa_request(oa_query(filter = filter_i, multiple_id = multiple_id, :  ## The following work(s) have truncated lists of authors: W3202287394, W3207775241. ## Query each work separately by its identifier to get full list of authors. ## For example: ##   lapply(c(\"W3202287394\", \"W3207775241\"), \\(x) oa_fetch(identifier = x)) ## Details at https://docs.openalex.org/api-entities/authors/limitations. oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   options = list(sort = \"cited_by_count:desc\"),   count_only = TRUE,   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc ##      count db_response_time_ms page per_page ## [1,]   376                  58    1        1 oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   options = list(sort = \"cited_by_count:desc\"),   count_only = FALSE ) %>%   show_works() %>%   knitr::kable()"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"authors","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Authors","title":"A Brief Introduction to openalexR","text":"Similarly work, can use identifier pass authors’ OpenAlex ID. Example: want information authors IDs A5069892096 A5023888391. Example: want download authors’ records scholars work University Naples Federico II (OpenAlex ID: I71267560) published 499 works. Let’s first check many records match query, set count_only = FALSE download entire collection. can first defining list arguments, adding count_only (default FALSE) list: can also use filters display_name, has_orcid, orcid:","code":"oa_fetch(   identifier = c(\"A5069892096\", \"A5023888391\"),   verbose = TRUE ) %>%   show_authors() %>%   knitr::kable() ## Requesting url: https://api.openalex.org/authors?filter=openalex%3AA5069892096%7CA5023888391 ## Getting 1 page of results with a total of 2 records... my_arguments <- list(   entity = \"authors\",   last_known_institutions.id = \"I71267560\",   works_count = \">499\"   )  do.call(oa_fetch, c(my_arguments, list(count_only = TRUE))) ##      count db_response_time_ms page per_page ## [1,]    46                 164    1        1 do.call(oa_fetch, my_arguments) %>%    show_authors() %>%   knitr::kable() ## Warning: Unknown or uninitialised column: `name`. ## Warning: Unknown or uninitialised column: `display_name`. ## Warning: Unknown or uninitialised column: `name`. ## Warning: Unknown or uninitialised column: `display_name`. ## Warning: Unknown or uninitialised column: `name`. ## Warning: Unknown or uninitialised column: `display_name`. ## Warning: Unknown or uninitialised column: `name`. ## Warning: Unknown or uninitialised column: `display_name`. oa_fetch(   entity = \"authors\",   display_name.search = \"Massimo Aria\",   has_orcid = \"true\" ) %>%   show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   orcid = \"0000-0002-8517-9411\" ) %>%   show_authors() %>%   knitr::kable()"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"institutions","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Institutions","title":"A Brief Introduction to openalexR","text":"Example: want download records regarding Italian institutions (country_code:) classified educational (type:education). , check many records match query download collection:","code":"italian_insts <- list(   entity = \"institutions\",   country_code = \"it\",   type = \"education\",   verbose = TRUE )  do.call(oa_fetch, c(italian_insts, list(count_only = TRUE))) ## Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation ##      count db_response_time_ms page per_page ## [1,]   232                  41    1        1 dplyr::glimpse(do.call(oa_fetch, italian_insts)) ## Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation ## Getting 2 pages of results with a total of 232 records... ## Rows: 232 ## Columns: 21 ## $ id                         <chr> \"https://openalex.org/I861853513\", \"https:/… ## $ display_name               <chr> \"Sapienza University of Rome\", \"University … ## $ display_name_alternatives  <list> <\"Université La Sapienza de Rome\", \"Rimska… ## $ display_name_acronyms      <list> NA, \"UNIMI\", \"UNIBO\", \"UNIPD\", NA, NA, \"UN… ## $ display_name_international <list> <\"Universiteit van Rome\", \"جامعة روما سابي… ## $ ror                        <chr> \"https://ror.org/02be6w209\", \"https://ror.o… ## $ ids                        <list> <\"https://openalex.org/I861853513\", \"https… ## $ country_code               <chr> \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"… ## $ geo                        <list> [<data.frame[1 x 7]>], [<data.frame[1 x 7]… ## $ type                       <chr> \"education\", \"education\", \"education\", \"edu… ## $ homepage_url               <chr> \"https://www.uniroma1.it\", \"https://www.uni… ## $ image_url                  <chr> \"https://commons.wikimedia.org/w/index.php?… ## $ image_thumbnail_url        <chr> \"https://commons.wikimedia.org/w/index.php?… ## $ associated_institutions    <list> [<data.frame[4 x 6]>], [<data.frame[2 x 6]… ## $ works_count                <int> 209637, 185366, 176817, 173604, 122598, 117… ## $ cited_by_count             <int> 5134159, 5470057, 4673112, 5019135, 3162965… ## $ counts_by_year             <list> [<data.frame[13 x 3]>], [<data.frame[13 x … ## $ works_api_url              <chr> \"https://api.openalex.org/works?filter=inst… ## $ topics                     <list> [<tbl_df[100 x 5]>], [<tbl_df[100 x 5]>], … ## $ updated_date               <chr> \"2024-10-23T18:34:17.183337\", \"2024-10-24T1… ## $ created_date               <chr> \"2016-06-24\", \"2016-06-24\", \"2016-06-24\", \"…"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"concepts-think-theme-keywords","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Concepts (think theme, keywords)","title":"A Brief Introduction to openalexR","text":"Example: want download records concepts concern least one million works:","code":"popular_concepts <- list(   entity = \"concepts\",   works_count = \">1000000\",   verbose = TRUE )  do.call(oa_fetch, c(popular_concepts, list(count_only = TRUE))) ## Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 ##      count db_response_time_ms page per_page ## [1,]   273                  18    1        1 dplyr::glimpse(do.call(oa_fetch, popular_concepts)) ## Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 ## Getting 2 pages of results with a total of 273 records... ## Rows: 273 ## Columns: 16 ## $ id                         <chr> \"https://openalex.org/C41008148\", \"https://… ## $ display_name               <chr> \"Computer science\", \"Medicine\", \"Biology\", … ## $ display_name_international <list> <\"informatika\", \"የኮምፒውተር፡ጥናት\", \"Informatic… ## $ description                <chr> \"study of computation\", \"field of study for… ## $ description_international  <list> <\"studie van berekening en inligtingverwer… ## $ wikidata                   <chr> \"https://www.wikidata.org/wiki/Q21198\", \"ht… ## $ level                      <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1… ## $ ids                        <list> <\"https://openalex.org/C41008148\", \"https:… ## $ image_url                  <chr> \"https://upload.wikimedia.org/wikipedia/com… ## $ image_thumbnail_url        <chr> \"https://upload.wikimedia.org/wikipedia/com… ## $ ancestors                  <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, [<… ## $ related_concepts           <list> [<data.frame[93 x 5]>], [<data.frame[51 x … ## $ works_count                <int> 91640517, 63165832, 46945702, 43366261, 376… ## $ cited_by_count             <int> 677663491, 814030740, 884155767, 570502558,… ## $ counts_by_year             <list> [<data.frame[13 x 3]>], [<data.frame[13 x … ## $ works_api_url              <chr> \"https://api.openalex.org/works?filter=conc…"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"other-examples","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Other examples","title":"A Brief Introduction to openalexR","text":"Get works citing particular work can download publications citing another publication using filter attribute cites. example, want download publications citing article Aria Cuccurullo (2017), just set argument filter cites = \"W2755950973\" “W2755950973” OA id article Aria Cuccurullo. query return collection NA publications. Among articles, let’s download ones published following year:","code":"aria_count <- oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   count_only = TRUE,   verbose = TRUE ) ## Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973 aria_count ##      count db_response_time_ms page per_page ## [1,]  7509                 109    1        1 oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   publication_year = 2018,   count_only = FALSE,   verbose = TRUE ) %>%    dplyr::glimpse() ## Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973%2Cpublication_year%3A2018 ## Getting 1 page of results with a total of 31 records... ## Rows: 31 ## Columns: 39 ## $ id                          <chr> \"https://openalex.org/W2896801517\", \"https… ## $ title                       <chr> \"Global trends in infectious diseases of s… ## $ display_name                <chr> \"Global trends in infectious diseases of s… ## $ author                      <list> [<data.frame[2 x 12]>], [<data.frame[2 x … ## $ ab                          <chr> \"Pork accounts for more than one-third of … ## $ publication_date            <date> 2018-10-22, 2018-11-26, 2018-12-20, 2018-… ## $ so                          <chr> \"Proceedings of the National Academy of Sc… ## $ so_id                       <chr> \"https://openalex.org/S125754415\", \"https:… ## $ host_organization           <chr> \"National Academy of Sciences\", \"Wiley\", \"… ## $ issn_l                      <chr> \"0027-8424\", \"0043-1397\", \"0169-5347\", \"00… ## $ url                         <chr> \"https://doi.org/10.1073/pnas.1806068115\",… ## $ pdf_url                     <chr> \"https://www.pnas.org/content/pnas/115/45/… ## $ license                     <chr> NA, NA, NA, NA, \"cc-by\", NA, NA, \"publishe… ## $ version                     <chr> \"publishedVersion\", \"publishedVersion\", NA… ## $ first_page                  <chr> \"11495\", \"378\", \"224\", \"12\", \"e0207655\", \"… ## $ last_page                   <chr> \"11500\", \"390\", \"238\", \"63\", \"e0207655\", \"… ## $ volume                      <chr> \"115\", \"55\", \"34\", \"50\", \"13\", \"205\", \"45\"… ## $ issue                       <chr> \"45\", \"1\", \"3\", \"1\", \"11\", NA, \"3\", \"4-5\",… ## $ is_oa                       <lgl> TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALS… ## $ is_oa_anywhere              <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE,… ## $ oa_status                   <chr> \"bronze\", \"bronze\", \"green\", \"bronze\", \"go… ## $ oa_url                      <chr> \"https://www.pnas.org/content/pnas/115/45/… ## $ any_repository_has_fulltext <lgl> TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, FALS… ## $ language                    <chr> \"en\", \"en\", \"en\", \"en\", \"en\", \"en\", \"en\", … ## $ grants                      <list> <\"https://openalex.org/F4320332299\", \"Nat… ## $ cited_by_count              <int> 218, 199, 172, 150, 124, 114, 111, 84, 83,… ## $ counts_by_year              <list> [<data.frame[7 x 2]>], [<data.frame[6 x 2… ## $ publication_year            <int> 2018, 2018, 2018, 2018, 2018, 2018, 2018, … ## $ cited_by_api_url            <chr> \"https://api.openalex.org/works?filter=cit… ## $ ids                         <list> <\"https://openalex.org/W2896801517\", \"htt… ## $ doi                         <chr> \"https://doi.org/10.1073/pnas.1806068115\",… ## $ type                        <chr> \"review\", \"article\", \"article\", \"article\",… ## $ referenced_works            <list> <\"https://openalex.org/W1530619192\", \"htt… ## $ related_works               <list> <\"https://openalex.org/W4384639906\", \"htt… ## $ is_paratext                 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, … ## $ is_retracted                <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, … ## $ concepts                    <list> [<data.frame[25 x 5]>], [<data.frame[22 x… ## $ topics                      <list> [<tbl_df[12 x 5]>], [<tbl_df[12 x 5]>], [… ## $ apc                         <list> NA, [<data.frame[2 x 5]>], [<data.frame[2…"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"convert-an-openalex-data-frame-to-a-bibliometrix-object","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex","what":"Convert an OpenAlex data frame to a bibliometrix object","title":"A Brief Introduction to openalexR","text":"bibliometrix R-package (https://www.bibliometrix.org) provides set tools quantitative research bibliometrics scientometrics. Today represents one used science mapping software world. recent survey bibliometric analysis tools, Moral-Muñoz et al. (2020) wrote: “moment, maybe Bibliometrix Shiny platform contain extensive set techniques implemented, together easiness interface, great software practitioners”. function oa2bibliometrix converts bibliographic data frame works bibliometrix object. object can used input collection science mapping workflow.","code":"bib_ls <- list(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2022-01-01\",   to_publication_date = \"2022-03-31\" )  do.call(oa_fetch, c(bib_ls, list(count_only = TRUE))) ##      count db_response_time_ms page per_page ## [1,]   402                  33    1        1 do.call(oa_fetch, bib_ls) %>%    oa2bibliometrix() %>%    dplyr::glimpse() ## Rows: 402 ## Columns: 53 ## $ AU                          <chr> \"YIXIA CHEN;MING‐WEI LIN;DAN ZHUANG\", \"WEN… ## $ RP                          <chr> \"COLLEGE OF COMPUTER AND CYBER SECURITY, F… ## $ C1                          <chr> \"COLLEGE OF COMPUTER AND CYBER SECURITY, F… ## $ AU_UN                       <chr> \"FUJIAN NORMAL UNIVERSITY;FUJIAN NORMAL UN… ## $ AU_CO                       <chr> \"CHINA;CHINA;CHINA\", \"MALAYSIA;INDIA;INDIA… ## $ ID                          <chr> \"WASTEWATER;ENVIRONMENTAL SCIENCE;CONTAMIN… ## $ id_url                      <chr> \"https://openalex.org/W4210864411\", \"https… ## $ title                       <chr> \"Wastewater treatment and emerging contami… ## $ author                      <list> [<data.frame[3 x 12]>], [<data.frame[4 x … ## $ publication_date            <date> 2022-02-08, 2022-03-08, 2022-02-09, 2022-… ## $ so_id                       <chr> \"https://openalex.org/S203465130\", \"https:… ## $ host_organization           <chr> \"Elsevier BV\", \"Wiley\", \"Taylor & Francis\"… ## $ issn_l                      <chr> \"0045-6535\", \"0742-6046\", \"0020-7543\", \"10… ## $ url                         <chr> \"https://doi.org/10.1016/j.chemosphere.202… ## $ pdf_url                     <chr> NA, NA, NA, \"https://link.springer.com/con… ## $ license                     <chr> NA, NA, NA, NA, \"cc-by\", NA, \"cc-by-nc-nd\"… ## $ version                     <chr> NA, NA, NA, \"publishedVersion\", \"published… ## $ first_page                  <chr> \"133932\", \"1129\", \"7527\", \"297\", \"104608\",… ## $ last_page                   <chr> \"133932\", \"1155\", \"7550\", \"338\", \"104608\",… ## $ volume                      <chr> \"297\", \"39\", \"60\", \"32\", \"136\", \"30\", \"159… ## $ issue                       <chr> NA, \"6\", \"24\", \"1\", NA, \"2\", NA, NA, \"6\", … ## $ is_oa                       <lgl> FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, TR… ## $ is_oa_anywhere              <lgl> FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, TR… ## $ oa_status                   <chr> \"closed\", \"closed\", \"closed\", \"bronze\", \"h… ## $ oa_url                      <chr> NA, NA, NA, \"https://link.springer.com/con… ## $ any_repository_has_fulltext <lgl> FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FA… ## $ language                    <chr> \"en\", \"en\", \"en\", \"en\", \"en\", \"en\", \"en\", … ## $ grants                      <list> <\"https://openalex.org/F4320321001\", \"Nat… ## $ counts_by_year              <list> [<data.frame[3 x 2]>], [<data.frame[3 x 2… ## $ cited_by_api_url            <chr> \"https://api.openalex.org/works?filter=cit… ## $ ids                         <list> <\"https://openalex.org/W4210864411\", \"htt… ## $ doi                         <chr> \"https://doi.org/10.1016/j.chemosphere.202… ## $ referenced_works            <list> <\"https://openalex.org/W1854025783\", \"htt… ## $ related_works               <list> <\"https://openalex.org/W4388943160\", \"htt… ## $ is_paratext                 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, … ## $ is_retracted                <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, … ## $ concepts                    <list> [<data.frame[16 x 5]>], [<data.frame[24 x… ## $ topics                      <list> [<tbl_df[8 x 5]>], [<tbl_df[12 x 5]>], [<… ## $ apc                         <list> [<data.frame[2 x 5]>], [<data.frame[2 x 5… ## $ id_oa                       <chr> \"W4210864411\", \"W4220991995\", \"W4210997151… ## $ CR                          <chr> \"W1854025783;W1896090423;W1965064785;W1990… ## $ TI                          <chr> \"WASTEWATER TREATMENT AND EMERGING CONTAMI… ## $ AB                          <chr> \"IN RECENT YEARS, EMERGING CONTAMINANTS HA… ## $ SO                          <chr> \"CHEMOSPHERE\", \"PSYCHOLOGY AND MARKETING\",… ## $ DT                          <chr> \"REVIEW\", \"ARTICLE\", \"ARTICLE\", \"ARTICLE\",… ## $ DB                          <chr> \"OPENALEX\", \"OPENALEX\", \"OPENALEX\", \"OPENA… ## $ JI                          <chr> \"S203465130\", \"S102896891\", \"S65690446\", \"… ## $ J9                          <chr> \"S203465130\", \"S102896891\", \"S65690446\", \"… ## $ PY                          <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, … ## $ TC                          <int> 172, 140, 118, 116, 101, 98, 90, 90, 87, 8… ## $ DI                          <chr> \"10.1016/j.chemosphere.2022.133932\", \"10.1… ## $ SR_FULL                     <chr> \"YIXIA CHEN, 2022, CHEMOSPHERE\", \"WENG MAR… ## $ SR                          <chr> \"YIXIA CHEN, 2022, CHEMOSPHERE\", \"WENG MAR…"},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"about-openalex","dir":"Articles","previous_headings":"","what":"About OpenAlex","title":"A Brief Introduction to openalexR","text":"OpenAlex fully open catalog global research system. ’s named ancient Library Alexandria. OpenAlex dataset describes scholarly entities entities connected . five types entities: Works papers, books, datasets, etc; cite works Authors people create works Institutions universities orgs affiliated works (via authors) Concepts tag Works topic","code":""},{"path":"https://docs.ropensci.org/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"acknowledgements","dir":"Articles","previous_headings":"About OpenAlex","what":"Acknowledgements","title":"A Brief Introduction to openalexR","text":"Package hex made Midjourney thus inherits CC -NC 4.0 license.","code":""},{"path":"https://docs.ropensci.org/openalexR/articles/About-the-tibble-output.html","id":"example-1-institutions","dir":"Articles","previous_headings":"","what":"Example 1: institutions","title":"About the tibble output","text":"Suppose queried Open Alex obtain information large Canadian institutions now want extract latitudes longitudes. present three different approaches .","code":"institutions <- oa_fetch(   entity = \"institutions\",   country_code = \"CA\",   cited_by_count = \">4000000\",   verbose = TRUE,   count_only = FALSE ) #> Requesting url: https://api.openalex.org/institutions?filter=country_code%3ACA%2Ccited_by_count%3A%3E4000000 #> Getting 1 page of results with a total of 10 records...  head(institutions) #> # A tibble: 6 × 21 #>   id                   display_name display_name_alterna…¹ display_name_acronyms #>   <chr>                <chr>        <list>                 <list>                #> 1 https://openalex.or… University … <chr [1]>              <lgl [1]>             #> 2 https://openalex.or… University … <chr [1]>              <chr [1]>             #> 3 https://openalex.or… McGill Univ… <chr [1]>              <lgl [1]>             #> 4 https://openalex.or… University … <chr [2]>              <lgl [1]>             #> 5 https://openalex.or… University … <chr [1]>              <chr [1]>             #> 6 https://openalex.or… Université … <chr [2]>              <chr [1]>             #> # ℹ abbreviated name: ¹​display_name_alternatives #> # ℹ 17 more variables: display_name_international <list>, ror <chr>, #> #   ids <list>, country_code <chr>, geo <list>, type <chr>, homepage_url <chr>, #> #   image_url <chr>, image_thumbnail_url <chr>, associated_institutions <list>, #> #   works_count <int>, cited_by_count <int>, counts_by_year <list>, #> #   works_api_url <chr>, topics <list>, updated_date <chr>, created_date <chr>"},{"path":"https://docs.ropensci.org/openalexR/articles/About-the-tibble-output.html","id":"dplyrrowwise","dir":"Articles","previous_headings":"Example 1: institutions","what":"dplyr::rowwise","title":"About the tibble output","text":"use rowwise used discouraged, tidyverse team now recognized importance many workflows, rowwise stay. think rowwise pairs naturally list columns output.","code":"institutions %>%   rowwise() %>%   mutate(     name = display_name,     openalex = stringr::str_extract(id, \"I\\\\d+\"),     lat = geo$latitude,     lon = geo$longitude,     .keep = \"none\"   ) #> # A tibble: 10 × 4 #> # Rowwise:  #>    name                           openalex     lat    lon #>    <chr>                          <chr>      <dbl>  <dbl> #>  1 University of Toronto          I185261750  43.7  -79.4 #>  2 University of British Columbia I141945490  49.2 -123.  #>  3 McGill University              I5023651    45.5  -73.6 #>  4 University of Alberta          I154425047  53.6 -113.  #>  5 University of Calgary          I168635309  51.1 -114.  #>  6 Université de Montréal         I70931966   45.5  -73.6 #>  7 McMaster University            I98251732   43.3  -79.8 #>  8 University of Ottawa           I153718931  45.4  -75.7 #>  9 Western University             I125749732  43.0  -81.2 #> 10 University of Waterloo         I151746483  43.5  -80.5"},{"path":"https://docs.ropensci.org/openalexR/articles/About-the-tibble-output.html","id":"purrrmap","dir":"Articles","previous_headings":"Example 1: institutions","what":"purrr::map","title":"About the tibble output","text":"Alternatively, can use function purrr::map family. can see , syntax little less natural, may gain performance advantage really large dataframe.","code":"institutions %>%   mutate(     name = display_name,     openalex = stringr::str_extract(id, \"I\\\\d+\"),     lat = purrr::map_dbl(geo, ~ .x$latitude),     lon = purrr::map_dbl(geo, ~ .x$longitude),     .keep = \"none\"   ) #> # A tibble: 10 × 4 #>    name                           openalex     lat    lon #>    <chr>                          <chr>      <dbl>  <dbl> #>  1 University of Toronto          I185261750  43.7  -79.4 #>  2 University of British Columbia I141945490  49.2 -123.  #>  3 McGill University              I5023651    45.5  -73.6 #>  4 University of Alberta          I154425047  53.6 -113.  #>  5 University of Calgary          I168635309  51.1 -114.  #>  6 Université de Montréal         I70931966   45.5  -73.6 #>  7 McMaster University            I98251732   43.3  -79.8 #>  8 University of Ottawa           I153718931  45.4  -75.7 #>  9 Western University             I125749732  43.0  -81.2 #> 10 University of Waterloo         I151746483  43.5  -80.5"},{"path":"https://docs.ropensci.org/openalexR/articles/About-the-tibble-output.html","id":"baselapply","dir":"Articles","previous_headings":"Example 1: institutions","what":"base::lapply","title":"About the tibble output","text":"Similar purrr approach, can use base functions lapply family, example:","code":"institutions %>%   mutate(     name = display_name,     openalex = stringr::str_extract(id, \"I\\\\d+\"),     lat = vapply(geo, function(x) x$latitude, numeric(1)),     lon = vapply(geo, function(x) x$longitude, numeric(1)),     .keep = \"none\"   ) #> # A tibble: 10 × 4 #>    name                           openalex     lat    lon #>    <chr>                          <chr>      <dbl>  <dbl> #>  1 University of Toronto          I185261750  43.7  -79.4 #>  2 University of British Columbia I141945490  49.2 -123.  #>  3 McGill University              I5023651    45.5  -73.6 #>  4 University of Alberta          I154425047  53.6 -113.  #>  5 University of Calgary          I168635309  51.1 -114.  #>  6 Université de Montréal         I70931966   45.5  -73.6 #>  7 McMaster University            I98251732   43.3  -79.8 #>  8 University of Ottawa           I153718931  45.4  -75.7 #>  9 Western University             I125749732  43.0  -81.2 #> 10 University of Waterloo         I151746483  43.5  -80.5"},{"path":"https://docs.ropensci.org/openalexR/articles/About-the-tibble-output.html","id":"example-2-works","dir":"Articles","previous_headings":"","what":"Example 2: works","title":"About the tibble output","text":"Suppose tibble works output like find institutions corresponding works’ authors. case, work may one affiliated institutions.","code":""},{"path":"https://docs.ropensci.org/openalexR/articles/About-the-tibble-output.html","id":"tibble-output","dir":"Articles","previous_headings":"Example 2: works","what":"Tibble output","title":"About the tibble output","text":"Assuming author affiliated one institution, can call oa_fetch default output = \"tibble\": store result list column:","code":"works <- oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">100\",   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-01-31\",   options = list(sort = \"cited_by_count:desc\"),   count_only = FALSE ) multi_insts <- works %>%   rowwise() %>%   mutate(     openalex = stringr::str_extract(id, \"W\\\\d+\"),     institutions = list(unique(author$institution_display_name)),     .keep = \"none\"   )  multi_insts #> # A tibble: 75 × 2 #> # Rowwise:  #>    openalex    institutions #>    <chr>       <list>       #>  1 W3001491100 <chr [3]>    #>  2 W3038273726 <chr [2]>    #>  3 W3044902155 <chr [1]>    #>  4 W3042215340 <chr [3]>    #>  5 W2998021954 <lgl [1]>    #>  6 W3005144120 <chr [2]>    #>  7 W3011866596 <chr [1]>    #>  8 W3000049009 <chr [1]>    #>  9 W3003683721 <chr [3]>    #> 10 W3025370095 <chr [4]>    #> # ℹ 65 more rows  # institutions of the first work str(multi_insts[1, \"institutions\"]) #> rowws_df [1 × 1] (S3: rowwise_df/tbl_df/tbl/data.frame) #>  $ institutions:List of 1 #>   ..$ : chr [1:3] \"Universidad de Cádiz\" \"Universidad de Granada\" \"Hospital Universitario Puerta del Mar\" #>  - attr(*, \"groups\")= tibble [1 × 1] (S3: tbl_df/tbl/data.frame) #>   ..$ .rows: list<int> [1:1]  #>   .. ..$ : int 1 #>   .. ..@ ptype: int(0)"},{"path":"https://docs.ropensci.org/openalexR/articles/About-the-tibble-output.html","id":"list-output","dir":"Articles","previous_headings":"Example 2: works","what":"List output","title":"About the tibble output","text":"want get institutions authors works affiliated (since one author may affiliated one institution), want work list output. can see, nested list can convoluted work :","code":"works_list <- oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">100\",   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-01-31\",   options = list(sort = \"cited_by_count:desc\"),   output = \"list\" )  work_authors <- lapply(works_list, \\(x) x$author)  unique_insts <- sapply(   work_authors,   \\(z) unique(unlist(     sapply(       z, \\(y) sapply(y$institutions, \\(x) x$display_name)     )   )) )  unique_insts[[1]] #> [1] \"Universidad de Cádiz\"                  #> [2] \"Universidad de Granada\"                #> [3] \"Hospital Universitario Puerta del Mar\""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/openalexR/articles/Filters.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Filters","text":"","code":"library(openalexR) #> Thank you for using openalexR! #> To acknowledge our work, please cite the package by calling `citation(\"openalexR\")`. #> To suppress this message, add `openalexR.message = suppressed` to your .Renviron file.  # Unlike the other filters, search does NOT require an exact match.  # This is particularly useful to search for authors. Some authors have their middle names in a variety of forms, which may not exist, or co-exist in OpenAlex (e.g. Phillip H. Kuo, Phillip Hsin Kuo).   # The display_name search returns an exact match, and will NOT find all these variations. For example, author \"Phillip H. Kuo\" and \"Phillip Hsin Kuo\" is the same person. # His middle name are recorded differently in openAlex. Therefore, all the varitions can only be found either using search =\"Phillip Kuo\" or display_name =c(\"Phillip H. Kuo\" , \"Phillip Hsin Kuo\").  authors_from_names <- oa_fetch(   entity = \"authors\",    search = \"Phillip Kuo\"  )  lib_topics <- oa_fetch(   entity = \"topics\",    works_count = \"<999\",   cited_by_count = \">10000\" ) dplyr::glimpse(lib_topics) #> Rows: 4 #> Columns: 16 #> $ id                    <chr> \"https://openalex.org/T13311\", \"https://openalex… #> $ display_name          <chr> \"Social Ideology and Knowledge Production\", \"Int… #> $ description           <chr> \"This cluster of papers explores the intersectio… #> $ keywords              <list> <\"Ideology\", \"Knowledge Production\", \"Leadershi… #> $ ids                   <list> <\"https://openalex.org/T13311\", \"https://en.wik… #> $ subfield_id           <chr> \"https://openalex.org/subfields/3312\", \"https://… #> $ subfield_display_name <chr> \"Sociology and Political Science\", \"Information … #> $ field_id              <chr> \"https://openalex.org/fields/33\", \"https://opena… #> $ field_display_name    <chr> \"Social Sciences\", \"Computer Science\", \"Social S… #> $ domain_id             <chr> \"https://openalex.org/domains/2\", \"https://opena… #> $ domain_display_name   <chr> \"Social Sciences\", \"Physical Sciences\", \"Social … #> $ siblings              <list> [<data.frame[223 x 2]>], [<data.frame[77 x 2]>]… #> $ works_count           <int> 968, 938, 911, 492 #> $ cited_by_count        <int> 17621, 17923, 16983, 11804 #> $ updated_date          <chr> \"2024-10-21T04:55:58.663873\", \"2024-10-21T05:22:… #> $ created_date          <chr> \"2024-01-23\", \"2024-01-23\", \"2024-01-23\", \"2024-…  tech_insts <- oa_fetch(   entity = \"institutions\",    country_code = \"IL\",   display_name.search = \"technology\" ) dplyr::glimpse(tech_insts) #> Rows: 7 #> Columns: 22 #> $ id                         <chr> \"https://openalex.org/I174306211\", \"https:/… #> $ display_name               <chr> \"Technion – Israel Institute of Technology\"… #> $ display_name_alternatives  <list> <\"جامعة تخنيون\", \"Technion\", \"הטכניון – מכ… #> $ display_name_acronyms      <list> NA, <\"HIT\", \"CTEH\", \"HAIT\">, NA, \"JCT\", NA… #> $ display_name_international <list> <\"التخنيون - معهد إسرائيل للتكنولوجيا\", \"م… #> $ ror                        <chr> \"https://ror.org/03qryx823\", \"https://ror.o… #> $ ids                        <list> <\"https://openalex.org/I174306211\", \"https… #> $ country_code               <chr> \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"IL\" #> $ geo                        <list> [<data.frame[1 x 7]>], [<data.frame[1 x 7]>… #> $ type                       <chr> \"education\", \"education\", \"facility\", \"edu… #> $ homepage_url               <chr> \"http://www.technion.ac.il/\", \"http://www.h… #> $ image_url                  <chr> \"https://commons.wikimedia.org/w/index.php?… #> $ image_thumbnail_url        <chr> \"https://commons.wikimedia.org/w/index.php?… #> $ associated_institutions    <list> [<data.frame[2 x 6]>], NA, NA, NA, [<data.f… #> $ relevance_score            <dbl> 17901.0160, 2461.3096, 2275.1785, 1973.677… #> $ works_count                <int> 103499, 3653, 1431, 2617, 2272, 1232, 6 #> $ cited_by_count             <int> 3147331, 48604, 41500, 31183, 10762, 15025,… #> $ counts_by_year             <list> [<data.frame[13 x 3]>], [<data.frame[13 x 3… #> $ works_api_url              <chr> \"https://api.openalex.org/works?filter=inst… #> $ topics                     <list> [<tbl_df[100 x 5]>], [<tbl_df[100 x 5]>], … #> $ updated_date               <chr> \"2024-10-22T10:44:18.273692\", \"2024-10-23T0… #> $ created_date               <chr> \"2016-06-24\", \"2016-06-24\", \"2022-02-02\", …  peer_venues <- oa_fetch(   entity = \"sources\",    display_name = \"PeerJ\",   is_oa = TRUE,   is_in_doaj = TRUE ) dplyr::glimpse(peer_venues) #> Rows: 1 #> Columns: 26 #> $ id                        <chr> \"https://openalex.org/S1983995261\" #> $ issn_l                    <chr> \"2167-8359\" #> $ issn                      <list> \"2167-8359\" #> $ display_name              <chr> \"PeerJ\" #> $ host_organization         <chr> \"https://openalex.org/P4310320104\" #> $ host_organization_name    <chr> \"PeerJ, Inc.\" #> $ host_organization_lineage <list> \"https://openalex.org/P4310320104\" #> $ works_count               <int> 15123 #> $ cited_by_count            <int> 304485 #> $ summary_stats             <list> <2.075134, 140.000000, 8159.000000> #> $ is_oa                     <lgl> TRUE #> $ is_in_doaj                <lgl> TRUE #> $ ids                       <list> <\"https://openalex.org/S1983995261\", \"2167-8… #> $ homepage_url              <chr> \"http://www.peerj.com/\" #> $ apc_prices                <list> [<data.frame[1 x 2]>] #> $ apc_usd                   <int> 1395 #> $ country_code              <chr> \"US\" #> $ societies                 <lgl> NA #> $ alternate_titles          <list> <\"Peer j\", \"Peerj\"> #> $ abbreviated_title         <chr> \"PeerJ\" #> $ type                      <chr> \"journal\" #> $ counts_by_year            <list> [<data.frame[13 x 3]>] #> $ works_api_url             <chr> \"https://api.openalex.org/works?filter=prima… #> $ updated_date              <chr> \"2024-10-20T02:27:48.094574\" #> $ created_date              <chr> \"2016-06-24\" #> $ topics                    <list> [<tbl_df[100 x 5]>]"},{"path":"https://docs.ropensci.org/openalexR/articles/literature-search.html","id":"motivating-example","dir":"Articles","previous_headings":"","what":"Motivating example","title":"Literature search","text":"Suppose ’re interested finding publications explore links BRAF gene melanoma. rentrez package, can use entrez_search function retrieves 10 records matching search query PubMed database. hand, openalexR, can use search argument oa_fetch(): call performs search using OpenAlex API, retrieving 10 relevant results query “BRAF melanoma”. default, oa_fetch() call return records associated search, example, querying “BRAF melanoma” OpenAlex may return 54,000 records. Fetching records unnecessarily slow, especially often interested top, say, 10 results (based citation count relevance — sorting ). can limit number results arguments per_page (number records return per page, 1 200, default 200) pages (range pages return, e.g., 1:3 first 3 pages, default NULL return pages). example, want top 250 records, can set per_page = 50, pages = 1:5 get exactly 250 records; per_page = 200, pages = 1:2 get 400 records, can slice dataframe one time get first 250.","code":"braf_pubmed <- entrez_search(db = \"pubmed\", term = \"BRAF and melanoma\", retmax = 10) braf_pubmed #> Entrez search result with 8236 hits (object contains 10 IDs and no web_history object) #>  Search term (as translated):  \"BRAF\"[All Fields] AND (\"melanoma\"[MeSH Terms] OR  ... braf_pubmed$ids |>    entrez_summary(db = \"pubmed\") |>    extract_from_esummary(\"title\") |>    tibble::enframe(\"id\", \"title\") #> # A tibble: 10 × 2 #>    id       title                                                                #>    <chr>    <chr>                                                                #>  1 39438602 Matched three-dimensional organoids and two-dimensional cell lines … #>  2 39437750 BRAF/MEK inhibitor-induced tumor lysis syndrome in a patient with m… #>  3 39436655 eIF4F controls ERK MAPK signaling in melanomas with BRAF and NRAS m… #>  4 39435288 Immunotherapy after progression to double immunotherapy: pembrolizu… #>  5 39427441 First-line encorafenib plus binimetinib and pembrolizumab for advan… #>  6 39424026 Circulating tumor DNA in conjunctival melanoma: landscape and surve… #>  7 39421183 Clinicopathological features, response patterns, outcomes and BRAF … #>  8 39420942 Follicular cell-derived thyroid carcinomas harboring novel genetic … #>  9 39415471 A Review of Melanoma Subtypes: Genetic and Treatment Considerations. #> 10 39415285 Recurrent melanoma 25 years after initial diagnosis, presenting as … braf_oa <- oa_fetch(   search = \"BRAF AND melanoma\",   pages = 1,   per_page = 10,   verbose = TRUE ) #> Requesting url: https://api.openalex.org/works?search=BRAF%20AND%20melanoma #> Using basic paging... #> Getting 1 page of results with a total of 10 records... braf_oa |>    show_works(simp_func = identity) |>    select(1:2) #> # A tibble: 10 × 2 #>    id          display_name                                                      #>    <chr>       <chr>                                                             #>  1 W2128542677 Improved Survival with Vemurafenib in Melanoma with BRAF V600E M… #>  2 W2106543129 Inhibition of Mutated, Activated BRAF in Metastatic Melanoma      #>  3 W2163188200 Mutations of the BRAF gene in human cancer                        #>  4 W2168143310 Survival in BRAF V600–Mutant Advanced Melanoma Treated with Vemu… #>  5 W2136474966 Improved Survival with MEK Inhibition in BRAF-Mutated Melanoma    #>  6 W2166262263 Dabrafenib in BRAF-mutated metastatic melanoma: a multicentre, o… #>  7 W2096387850 Combined BRAF and MEK Inhibition versus BRAF Inhibition Alone in… #>  8 W2121545342 Combined Vemurafenib and Cobimetinib in <i>BRAF<\/i>-Mutated Mela… #>  9 W1971947883 Clinical efficacy of a RAF inhibitor needs broad target blockade… #> 10 W2128035403 Nivolumab in Previously Untreated Melanoma without<i>BRAF<\/i>Mut…"},{"path":"https://docs.ropensci.org/openalexR/articles/literature-search.html","id":"sorting-results","dir":"Articles","previous_headings":"","what":"Sorting results","title":"Literature search","text":"default, results oa_fetch sorted based relevance_score, measure closely result matches query.1 different ordering desired, sorting citation count, can specify sort options argument. commonly used sorting options: relevance_score: Default, ranks results based query match relevance. cited_by_count: Sorts results based number times work cited. publication_date: Sorts publication date.","code":"results <- openalexR::oa_fetch(   search = \"BRAF AND melanoma\",    pages = 1,   per_page = 10,   options = list(sort = \"cited_by_count:desc\"),   verbose = TRUE ) #> Requesting url: https://api.openalex.org/works?search=BRAF%20AND%20melanoma&sort=cited_by_count%3Adesc #> Using basic paging... #> Getting 1 page of results with a total of 10 records..."},{"path":"https://docs.ropensci.org/openalexR/articles/literature-search.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Literature search","text":"openalexR package provides powerful flexible interface conducting academic literature searches using OpenAlex API. controlling number results sorting order, can tailor search retrieve relevant impactful publications. cases large datasets involved, ’s useful limit number results returned ensure efficient timely searches. encourage users explore options provided openalexR refine search retrieve specific data need research projects: https://docs.openalex.org/api-entities/works/search-works https://docs.openalex.org/--use--api/get-lists--entities/search-entities","code":""},{"path":"https://docs.ropensci.org/openalexR/articles/performance-optimization.html","id":"the-select-strategy","dir":"Articles","previous_headings":"","what":"The select strategy","title":"Performance and optimization","text":"options argument oa_fetch() specifies list additional parameters add query, select, sort, sample, seed. , select can used specify fields entities returned OpenAlex. specifying kinds information entities care , can reduce overall size query result, turn speed fetching raw JSON conversion data frame. example, suppose looking sample works Topic Language Development Acquisition Children (\"T10730\"). sample papers topic, can use topics.id filter set options = list(sample = 5, seed = 1) return random set five Works entities reproducible seed: OpenAlex, entities set fields represent various information . typically returned data frame columns oa_fetch(), full list fields can found API documentation entity. example, fields Works object contain information id, display_name, authorships, . cared three fields sample papers, can simplify specify fields select parameters options list arguments: returns scalar fields id display_name appropriate data types (character) dataframe. Additionally, authorships field processed list-column data frames, fit nicely “tidy” data frame structure. Specifying desired fields front way convenient also performant, less data oa_fetch() process.","code":"language_development <- oa_fetch(   entity = \"topics\",   search = \"Language Development and Acquisition in Children\" )[1,1:2] language_development #> # A tibble: 1 × 2 #>   id                          display_name                                     #>   <chr>                       <chr>                                            #> 1 https://openalex.org/T10730 Language Development and Acquisition in Children oa_fetch(   entity = \"works\",   topics.id = language_development$id,   options = list(sample = 5, seed = 1) ) %>%    show_works() #> # A tibble: 5 × 8 #>   id        display_name first_author last_author so    url   is_oa top_concepts #>   <chr>     <chr>        <chr>        <chr>       <chr> <chr> <lgl> <chr>        #> 1 W4401916… The effect … Melissa K. … Yujin Song  Lang… http… TRUE  Referent, P… #> 2 W4319601… The Effect … Ziyu Yang    NA          Jour… http… TRUE  Foreign lan… #> 3 W2166086… Differentia… Julie Demouy Laurence R… Rese… http… FALSE Specific la… #> 4 W4364379… Chapter 4. … Mark Amengu… NA          Bili… http… FALSE Phonology, … #> 5 W2894907… The acquisi… Kayla Raye … NA          NA    http… FALSE Relative cl… oa_fetch(   entity = \"works\",   topics.id = language_development$id,   options = list(sample = 5, seed = 1,                  select = c(\"id\", \"display_name\", \"authorships\")) ) #> # A tibble: 5 × 3 #>   id                               display_name                           author #>   <chr>                            <chr>                                  <list> #> 1 https://openalex.org/W4401916583 The effect of emotional prosody and r… <df>   #> 2 https://openalex.org/W4319601311 The Effect of Learning a Second Forei… <df>   #> 3 https://openalex.org/W2166086935 Differential language markers of path… <df>   #> 4 https://openalex.org/W4364379308 Chapter 4. Cross-language influences … <df>   #> 5 https://openalex.org/W2894907948 The acquisition of relative clause st… <df>"},{"path":"https://docs.ropensci.org/openalexR/articles/performance-optimization.html","id":"the-output-list-strategy","dir":"Articles","previous_headings":"","what":"The output = \"list\" strategy","title":"Performance and optimization","text":"default, oa_fetch() uses output = \"tibble\", returns processed tibble data frame results. cases, JSON response OpenAlex first converted R list, data frame via oa2df(), calls appropriate conversion implementation depending type entity processed (e.g., works2df() Works entities). lot care goes oa2df() return compact, tidy-data representation query results. operations can become bottleneck performance scale, sometimes may want opt automatic data frame conversion. oa_fetch(), can set output = \"list\", simply return R list corresponding JSON response. list output can get quite unruly — record contains dozens fields, may multiply nested. Moreover, records may missing incomplete fields, extra care must taken output = \"list\" approach. One advantage returning output list can always come back process data frames later. Instead retrieving converting results simultaneously, may stress oa_fetch() large queries, can retrieve results first convert fact. case, Works entities can processed works2df() (generally, oa2df(entity = \"works\")), returns data frame identical saw start default output = \"tibble\": Additionally, opting data frame conversion also means can use preferred implementation converting list output. can powerful optimization strategy combined select option. example, know selecting scalar fields, can quickly convert list output tidy data using powerful tools like data.table::rbindlist() even just rbind():","code":"output_list <- oa_fetch(   entity = \"works\",   topics.id = language_development$id,   options = list(sample = 5, seed = 1),   output = \"list\" ) str(output_list, max.level = 1) #> List of 5 #>  $ :List of 50 #>  $ :List of 50 #>  $ :List of 51 #>  $ :List of 50 #>  $ :List of 50 works2df(output_list) %>%    show_works() #> # A tibble: 5 × 8 #>   id        display_name first_author last_author so    url   is_oa top_concepts #>   <chr>     <chr>        <chr>        <chr>       <chr> <chr> <lgl> <chr>        #> 1 W4401916… The effect … Melissa K. … Yujin Song  Lang… http… TRUE  Referent, P… #> 2 W4319601… The Effect … Ziyu Yang    NA          Jour… http… TRUE  Foreign lan… #> 3 W2166086… Differentia… Julie Demouy Laurence R… Rese… http… FALSE Specific la… #> 4 W4364379… Chapter 4. … Mark Amengu… NA          Bili… http… FALSE Phonology, … #> 5 W2894907… The acquisi… Kayla Raye … NA          NA    http… FALSE Relative cl… oa_fetch(   entity = \"works\",   topics.id = language_development$id,   options = list(sample = 5, seed = 1,                  select = c(\"id\", \"display_name\", \"cited_by_count\")),   output = \"list\" ) %>%    do.call(rbind.data.frame, .) %>%    as_tibble() #> # A tibble: 5 × 3 #>   id                               display_name                   cited_by_count #>   <chr>                            <chr>                                   <int> #> 1 https://openalex.org/W4401916583 The effect of emotional proso…              0 #> 2 https://openalex.org/W4319601311 The Effect of Learning a Seco…              0 #> 3 https://openalex.org/W2166086935 Differential language markers…             58 #> 4 https://openalex.org/W4364379308 Chapter 4. Cross-language inf…              2 #> 5 https://openalex.org/W2894907948 The acquisition of relative c…              0"},{"path":"https://docs.ropensci.org/openalexR/articles/performance-optimization.html","id":"the-oa_generate-strategy","dir":"Articles","previous_headings":"","what":"The oa_generate() strategy","title":"Performance and optimization","text":"code still seems slow, possible may run memory (especially snowball search like oa_snowball). cases, might help chunk work save output step, piece back together later different session/program.1 oa_generate() function lower-level function allows process one record time. way, can process records batches , say, 1000 records, write disk go along.2 example , show oa_generate() works want find works cite W1160808132. see, record returned oa_generate list fields belonging work, parsed JSON response OpenAlex. can process records see fit, writing .rds files batches 100 records.","code":"query_url <- \"https://api.openalex.org/works?filter=cites%3AW1160808132\" oar <- oa_generate(query_url, verbose = TRUE) p1 <- oar() # record 1 #> Getting record 1 of 483 records... p2 <- oar() # record 2 #> Getting record 2 of 483 records... p3 <- oar() # record 3 #> Getting record 3 of 483 records... head(p1) #> $id #> [1] \"https://openalex.org/W2766937672\" #>  #> $doi #> [1] \"https://doi.org/10.1016/j.enpol.2017.10.050\" #>  #> $title #> [1] \"How economic growth, renewable electricity and natural resources contribute to CO2 emissions?\" #>  #> $display_name #> [1] \"How economic growth, renewable electricity and natural resources contribute to CO2 emissions?\" #>  #> $publication_year #> [1] 2017 #>  #> $publication_date #> [1] \"2017-11-22\" head(p3) #> $id #> [1] \"https://openalex.org/W2317269391\" #>  #> $doi #> [1] \"https://doi.org/10.1016/j.renene.2016.03.078\" #>  #> $title #> [1] \"Determinants of CO2 emissions in the European Union: The role of renewable and non-renewable energy\" #>  #> $display_name #> [1] \"Determinants of CO2 emissions in the European Union: The role of renewable and non-renewable energy\" #>  #> $publication_year #> [1] 2016 #>  #> $publication_date #> [1] \"2016-04-01\" query_url <- \"https://api.openalex.org/works?filter=cites%3AW1160808132\" oar <- oa_generate(query_url) n <- 100 recs <- vector(\"list\", n) i <- 0  coro::loop(for (x in oar) {   j <- i %% n + 1   recs[[j]] <- x   if (j == n) {     saveRDS(recs, file.path(tempdir(), sprintf(\"rec-%s.rds\", i %/% n)))     recs <- vector(\"list\", n) # reset recs   }   i <- i + 1 })  dir(tempdir(), pattern = \"rec-\\\\d.rds$\") #> [1] \"rec-0.rds\" \"rec-1.rds\" \"rec-2.rds\" \"rec-3.rds\""},{"path":"https://docs.ropensci.org/openalexR/articles/performance-optimization.html","id":"tips-on-generating-the-query-url-to-the-openalex-api","dir":"Articles","previous_headings":"The oa_generate() strategy","what":"Tips on generating the query URL to the OpenAlex API","title":"Performance and optimization","text":"build query, can use oa_query() carefully read API documentation see fields/filters available. example, know cites filter can use: However, might find helpful use OpenAlex web interface build query interactively. Make sure select Gear icon right toggle “Api query”.","code":"oa_query(entity = \"works\", cites = \"W1160808132\") #> [1] \"https://api.openalex.org/works?filter=cites%3AW1160808132\""},{"path":"https://docs.ropensci.org/openalexR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Massimo Aria. Author, maintainer, copyright holder. Corrado Cuccurullo. Contributor. Trang Le. Author. June Choe. Author.","code":""},{"path":"https://docs.ropensci.org/openalexR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aria, M., Le, T., Cuccurullo, C., Belfiore, . & Choe, J. (2024), openalexR: R-Tool Collecting Bibliometric Data OpenAlex, R Journal, 15(4), 167-180.","code":"@Article{,   title = {openalexR: An R-Tool for Collecting Bibliometric Data from OpenAlex},   author = {Aria Massimo and {Le Trang} and Cuccurullo Corrado and Belfiore Alessandra and Choe June},   journal = {The R Journal},   year = {2024},   doi = {10.32614/RJ-2023-089},   volume = {15},   issue = {4},   issn = {2073-4859},   pages = {167-180}, }"},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"openalexr-","dir":"","previous_headings":"","what":"Getting Bibliographic Records from OpenAlex Database Using DSL API","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"openalexR helps interface OpenAlex API retrieve bibliographic information publications, authors, institutions, sources, funders, publishers, topics concepts 5 main functions: oa_fetch: composes three functions user can execute everything one step, .e., oa_query |> oa_request |> oa2df oa_query: generates valid query, written following OpenAlex API syntax, set arguments provided user. oa_request: downloads collection entities matching query created oa_query manually written user, returns JSON object list format. oa2df: converts JSON object classical bibliographic tibble/data frame. oa_random: get random entity, e.g., oa_random(\"works\") gives different work time run ","code":""},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"scroll-citation","dir":"","previous_headings":"","what":"📜 Citation","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"use openalexR research, please cite: Aria, M., Le T., Cuccurullo, C., Belfiore, . & Choe, J. (2024), openalexR: R-Tool Collecting Bibliometric Data OpenAlex, R Journal, 15(4), 167-180, DOI: https://doi.org/10.32614/RJ-2023-089.","code":""},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"raised_hands-support-openalex","dir":"","previous_headings":"","what":"🙌 Support OpenAlex","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"OpenAlex helped , consider writing Testimonial help support OpenAlex team show work making real necessary impact.","code":""},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"gear-setup","dir":"","previous_headings":"","what":"⚙️ Setup","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"can install developer version openalexR GitHub : can install released version openalexR CRAN : go , highly recommend set openalexR.mailto option requests go polite pool faster response times. OpenAlex Premium, can add API key openalexR.apikey option well. lines best go .Rprofile file.edit(\"~/.Rprofile\"). Alternatively, can open .Renviron file.edit(\"~/.Renviron\") add:","code":"install.packages(\"remotes\") remotes::install_github(\"ropensci/openalexR\") install.packages(\"openalexR\") options(openalexR.mailto = \"example@email.com\") options(openalexR.apikey = \"EXAMPLE_APIKEY\") openalexR.mailto = example@email.com openalexR.apikey = EXAMPLE_APIKEY library(openalexR) library(dplyr) library(ggplot2)"},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"herb-examples","dir":"","previous_headings":"","what":"🌿 Examples","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"different filters/arguments can use oa_fetch, depending entity ’re interested : works, authors, sources, funders, institutions, concepts. show examples .","code":""},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"books-works","dir":"","previous_headings":"🌿 Examples","what":"📚 Works","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"Goal: Download information givens set publications (known DOIs). Use doi works filter: can view output tibble/dataframe, works_from_dois, interactively RStudio inspect base functions like str head. also provide experimental show_works function simplify result (e.g., remove columns, keep first/last author) easy viewing. Note: following table wrapped knitr::kable() displayed nicely README, likely need function. Goal: Download works given PMIDs. Use pmid filter: Goal: Download works published set authors (known ORCIDs). Use author.orcid filter (either canonical form https://orcid.org/ without work): Goal: Download works cited 50 times, published 2020 2021, include strings “bibliometric analysis” “science mapping” title. Maybe also want results sorted total citations descending order.","code":"works_from_dois <- oa_fetch(   entity = \"works\",   doi = c(\"10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1007/s11192-013-1221-3\"),   verbose = TRUE ) #> Requesting url: https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1007%2Fs11192-013-1221-3 #> Getting 1 page of results with a total of 2 records... # str(works_from_dois, max.level = 2) # head(works_from_dois) # show_works(works_from_dois)  works_from_dois |>   show_works() |>   knitr::kable() works_from_pmids <- oa_fetch(   entity = \"works\",   pmid = c(\"14907713\", 32572199),   verbose = TRUE ) #> Requesting url: https://api.openalex.org/works?filter=pmid%3A14907713%7C32572199 #> Getting 1 page of results with a total of 2 records... works_from_pmids |>   show_works() |>   knitr::kable() works_from_orcids <- oa_fetch(   entity = \"works\",   author.orcid = c(\"0000-0001-6187-6610\", \"0000-0002-8517-9411\"),   verbose = TRUE ) #> Requesting url: https://api.openalex.org/works?filter=author.orcid%3A0000-0001-6187-6610%7C0000-0002-8517-9411 #> Getting 2 pages of results with a total of 259 records... #> Warning in oa_request(oa_query(filter = filter_i, multiple_id = multiple_id, :  #> The following work(s) have truncated lists of authors: W4230863633. #> Query each work separately by its identifier to get full list of authors. #> For example: #>   lapply(c(\"W4230863633\"), \\(x) oa_fetch(identifier = x)) #> Details at https://docs.openalex.org/api-entities/authors/limitations. works_from_orcids |>   show_works() |>   knitr::kable() works_search <- oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   options = list(sort = \"cited_by_count:desc\"),   verbose = TRUE ) #> Requesting url: https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc #> Getting 2 pages of results with a total of 372 records... works_search |>   show_works() |>   knitr::kable()"},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"adult-authors","dir":"","previous_headings":"🌿 Examples","what":"🧑 Authors","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"Goal: Download author information know ORCID. , instead author.orcid like earlier, use orcid argument. may little confusing, , different entity (authors instead works) requires different set filters. Goal: Acquire information authors package. can use filters display_name has_orcid: Goal: Download authors’ records scholars work University Naples Federico II (OpenAlex ID: I71267560) published least 500 publications. Let’s first check many records match query, download entire collection. can first defining list arguments, adding count_only (default FALSE) list:","code":"authors_from_orcids <- oa_fetch(   entity = \"authors\",   orcid = c(\"0000-0001-6187-6610\", \"0000-0002-8517-9411\") ) authors_from_orcids |>   show_authors() |>   knitr::kable() authors_from_names <- oa_fetch(   entity = \"authors\",   display_name = c(\"Massimo Aria\", \"Jason Priem\"),   has_orcid = TRUE ) authors_from_names |>   show_authors() |>   knitr::kable() my_arguments <- list(   entity = \"authors\",   last_known_institutions.id = \"I71267560\",   works_count = \">499\" ) do.call(oa_fetch, c(my_arguments, list(count_only = TRUE))) #>      count db_response_time_ms page per_page #> [1,]    44                  81    1        1 if (do.call(oa_fetch, c(my_arguments, list(count_only = TRUE)))[1]>0){ do.call(oa_fetch, my_arguments) |>   show_authors() |>   knitr::kable() } #> Warning: Unknown or uninitialised column: `name`. #> Warning: Unknown or uninitialised column: `display_name`. #> Warning: Unknown or uninitialised column: `name`. #> Warning: Unknown or uninitialised column: `display_name`. #> Warning: Unknown or uninitialised column: `name`. #> Warning: Unknown or uninitialised column: `display_name`. #> Warning: Unknown or uninitialised column: `name`. #> Warning: Unknown or uninitialised column: `display_name`. #> Warning: Unknown or uninitialised column: `name`. #> Warning: Unknown or uninitialised column: `display_name`. #> Warning: Unknown or uninitialised column: `name`. #> Warning: Unknown or uninitialised column: `display_name`."},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"cherries-example-analyses","dir":"","previous_headings":"","what":"🍒 Example analyses","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"Goal: track popularity Biology concepts time. first download records level-1 concepts/keywords concern one million works:  Goal: Rank institutions Italy total number citations. want download records regarding Italian institutions (country_code:) classified educational (type:education). , check many records match query download collection:  publish ?  Goal: Visualize big journals’ topics. first download records regarding journals published 300,000 works, visualize scored concepts:","code":"library(gghighlight) concept_df <- oa_fetch(   entity = \"concepts\",   level = 1,   ancestors.id = \"https://openalex.org/C86803240\", # Biology   works_count = \">1000000\" ) concept_df |>   select(display_name, counts_by_year) |>   tidyr::unnest(counts_by_year) |>   filter(year < 2022) |>   ggplot() +   aes(x = year, y = works_count, color = display_name) +   facet_wrap(~display_name) +   geom_line(linewidth = 0.7) +   scale_color_brewer(palette = \"Dark2\") +   labs(     x = NULL, y = \"Works count\",     title = \"Virology spiked in 2020.\"   ) +   guides(color = \"none\") +   gghighlight(     max(works_count) > 200000,     min(works_count) < 400000,     label_params = list(nudge_y = 10^5, segment.color = NA)   ) #> label_key: display_name italy_insts <- oa_fetch(   entity = \"institutions\",   country_code = \"it\",   type = \"education\",   verbose = TRUE ) #> Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation #> Getting 2 pages of results with a total of 232 records... italy_insts |>   slice_max(cited_by_count, n = 8) |>   mutate(display_name = forcats::fct_reorder(display_name, cited_by_count)) |>   ggplot() +   aes(x = cited_by_count, y = display_name, fill = display_name) +   geom_col() +   scale_fill_viridis_d(option = \"E\") +   guides(fill = \"none\") +   labs(     x = \"Total citations\", y = NULL,     title = \"Italian references\"   ) +   coord_cartesian(expand = FALSE) # The package wordcloud needs to be installed to run this chunk # library(wordcloud) concept_cloud <- italy_insts |>   select(inst_id = id, topics) |>   tidyr::unnest(topics) |>   filter(name == \"field\") |>   select(display_name, count) |>   group_by(display_name) |>   summarise(score = sqrt(sum(count))) pal <- c(\"black\", scales::brewer_pal(palette = \"Set1\")(5)) set.seed(1) wordcloud::wordcloud(   concept_cloud$display_name,   concept_cloud$score,   scale = c(2, .4),   colors = pal ) # The package ggtext needs to be installed to run this chunk # library(ggtext) jours_all <- oa_fetch(   entity = \"sources\",   works_count = \">200000\",   verbose = TRUE )  clean_journal_name <- function(x) {   x |>     gsub(\"\\\\(.*?\\\\)\", \"\", x = _) |>     gsub(\"Journal of the|Journal of\", \"J.\", x = _) |>     gsub(\"/.*\", \"\", x = _) }  jours <- jours_all |>   filter(type == \"journal\") |>   slice_max(cited_by_count, n = 9) |>   distinct(display_name, .keep_all = TRUE) |>   select(jour = display_name, topics) |>   tidyr::unnest(topics) |>   filter(name == \"field\") |>   group_by(id, jour, display_name) |>    summarise(score = (sum(count))^(1/3), .groups = \"drop\") |>    left_join(concept_abbrev, by = join_by(id, display_name)) |>   mutate(     abbreviation = gsub(\" \", \"<br>\", abbreviation),     jour = clean_journal_name(jour),   ) |>   tidyr::complete(jour, abbreviation, fill = list(score = 0)) |>   group_by(jour) |>   mutate(     color = if_else(score > 10, \"#1A1A1A\", \"#D9D9D9\"), # CCCCCC     label = paste0(\"<span style='color:\", color, \"'>\", abbreviation, \"<\/span>\")   ) |>   ungroup()  jours |>   ggplot() +   aes(fill = jour, y = score, x = abbreviation, group = jour) +   facet_wrap(~jour) +   geom_hline(yintercept = c(25, 50), colour = \"grey90\", linewidth = 0.2) +   geom_segment(     aes(x = abbreviation, xend = abbreviation, y = 0, yend = 55),     color = \"grey95\"   ) +   geom_col(color = \"grey20\") +   coord_polar(clip = \"off\") +   theme_bw() +   theme(     plot.background = element_rect(fill = \"transparent\", colour = NA),     panel.background = element_rect(fill = \"transparent\", colour = NA),     panel.grid = element_blank(),     panel.border = element_blank(),     axis.text = element_blank(),     axis.ticks.y = element_blank()   ) +   ggtext::geom_richtext(     aes(y = 75, label = label),     fill = NA, label.color = NA, size = 3   ) +   scale_fill_brewer(palette = \"Set1\", guide = \"none\") +   labs(y = NULL, x = NULL, title = \"Journal clocks\")"},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"snowflake-snowball-search","dir":"","previous_headings":"","what":"❄️ Snowball search","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"user can also perform snowballing oa_snowball. Snowballing literature search technique researcher starts set articles find articles cite cited original set. oa_snowball returns list 2 elements: nodes edges. Similar oa_fetch, oa_snowball finds returns information core set articles satisfying certain criteria, , unlike oa_fetch, also returns information articles cite cited core set.","code":"# The packages ggraph and tidygraph need to be installed to run this chunk library(ggraph) library(tidygraph) #>  #> Attaching package: 'tidygraph' #> The following object is masked from 'package:stats': #>  #>     filter snowball_docs <- oa_snowball(   identifier = c(\"W1964141474\", \"W1963991285\"),   verbose = TRUE ) #> Requesting url: https://api.openalex.org/works?filter=openalex%3AW1964141474%7CW1963991285 #> Getting 1 page of results with a total of 2 records... #> Collecting all documents citing the target papers... #> Requesting url: https://api.openalex.org/works?filter=cites%3AW1963991285%7CW1964141474 #> Getting 3 pages of results with a total of 593 records... #> Collecting all documents cited by the target papers... #> Requesting url: https://api.openalex.org/works?filter=cited_by%3AW1963991285%7CW1964141474 #> Getting 1 page of results with a total of 94 records... ggraph(graph = as_tbl_graph(snowball_docs), layout = \"stress\") +   geom_edge_link(aes(alpha = after_stat(index)), show.legend = FALSE) +   geom_node_point(aes(fill = oa_input, size = cited_by_count), shape = 21, color = \"white\") +   geom_node_label(aes(filter = oa_input, label = id), nudge_y = 0.2, size = 3) +   scale_edge_width(range = c(0.1, 1.5), guide = \"none\") +   scale_size(range = c(3, 10), guide = \"none\") +   scale_fill_manual(values = c(\"#a3ad62\", \"#d46780\"), na.value = \"grey\", name = \"\") +   theme_graph() +   theme(     plot.background = element_rect(fill = \"transparent\", colour = NA),     panel.background = element_rect(fill = \"transparent\", colour = NA),     legend.position = \"bottom\"   ) +   guides(fill = \"none\")"},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"ear_of_rice-n-grams","dir":"","previous_headings":"","what":"🌾 N-grams","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"Update 2024-09-15: n-gram API endpoint currently service. following code chunk evaluated. OpenAlex offers (limited) support fulltext N-grams Work entities (IDs starting \"W\"). Given vector work IDs, oa_ngrams returns dataframe N-gram data (ngrams list-column) work. oa_ngrams can sometimes slow N-grams data can get pretty big, given N-grams \"cached via CDN\"](https://docs.openalex.org/api-entities/works/get-n-grams#api-endpoint), may also consider parallelizing special case (oa_ngrams automatically {curl} >= v5.0.0).","code":"ngrams_data <- oa_ngrams(   works_identifier = c(\"W1964141474\", \"W1963991285\"),   verbose = TRUE )  ngrams_data  lapply(ngrams_data$ngrams, head, 3)  ngrams_data |>   tidyr::unnest(ngrams) |>   filter(ngram_tokens == 2) |>   select(id, ngram, ngram_count) |>   group_by(id) |>   slice_max(ngram_count, n = 10, with_ties = FALSE) |>   ggplot(aes(ngram_count, forcats::fct_reorder(ngram, ngram_count))) +   geom_col(aes(fill = id), show.legend = FALSE) +   facet_wrap(~id, scales = \"free_y\") +   labs(     title = \"Top 10 fulltext bigrams\",     x = \"Count\",     y = NULL   )"},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"dizzy-about-openalex","dir":"","previous_headings":"","what":"💫 About OpenAlex","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"oar-img Schema credits: @dhimmel OpenAlex fully open catalog global research system. ’s named ancient Library Alexandria. OpenAlex dataset describes scholarly entities entities connected . five types entities: Works papers, books, datasets, etc; cite works Authors people create works Sources journals repositories host works Institutions universities orgs affiliated works (via authors) Concepts tag Works topic","code":""},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"handshake-code-of-conduct","dir":"","previous_headings":"","what":"🤝 Code of Conduct","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/openalexR/index.html","id":"eyeglasses-acknowledgements","dir":"","previous_headings":"","what":"👓 Acknowledgements","title":"Getting Bibliographic Records from OpenAlex Database Using DSL API","text":"Package hex made Midjourney thus inherits CC -NC 4.0 license.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/authors2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"converts bibliographic collection authors' records gathered OpenAlex database https://openalex.org/ data frame. function converts list authors' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/authors2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"","code":"authors2df(   data,   verbose = TRUE,   pb = if (verbose) oa_progress(length(data)) else NULL )"},{"path":"https://docs.ropensci.org/openalexR/reference/authors2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE. pb Progress bar object. verbose, computed `oa_progress`. NULL otherwise.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/authors2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"data.frame. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/authors2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of authors' records from list format to data frame — authors2df","text":"","code":"if (FALSE) { # \\dontrun{  # Query to search information about all authors affiliated to the University of Naples Federico II # which have authored at least 100 publications:  # University of Naples Federico II is associated to the OpenAlex id I71267560.   query_author <- oa_query(   identifier = NULL,   entity = \"authors\",   last_known_institutions.id = \"I71267560\",   works_count = \">500\" )  res <- oa_request(   query_url = query_author,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"authors\")  df } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/concept_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"Concepts and abbreviations. — concept_abbrev","title":"Concepts and abbreviations. — concept_abbrev","text":"0-level concepts corresponding abbreviations. Reference: https://www.ncbi.nlm.nih.gov/nlmcatalog/journals/","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/concept_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concepts and abbreviations. — concept_abbrev","text":"","code":"concept_abbrev"},{"path":"https://docs.ropensci.org/openalexR/reference/concept_abbrev.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Concepts and abbreviations. — concept_abbrev","text":"data frame 19 observations 3 variables: id, display_name, abbreviation.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/concepts2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"converts bibliographic collection concepts' records gathered OpenAlex database https://openalex.org/ data frame. function converts list concepts' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/concepts2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"","code":"concepts2df(   data,   verbose = TRUE,   pb = if (verbose) oa_progress(length(data)) else NULL )"},{"path":"https://docs.ropensci.org/openalexR/reference/concepts2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE. pb Progress bar object. verbose, computed `oa_progress`. NULL otherwise.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/concepts2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"data.frame. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/concepts2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of concepts' records from list format to data frame — concepts2df","text":"","code":"if (FALSE) { # \\dontrun{  # Query to search information about all Italian educational institutions   query_inst <- oa_query(   entity = \"concepts\",   display_name.search = \"electrodynamics\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"concepts\")  df } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/countrycode.html","id":null,"dir":"Reference","previous_headings":"","what":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"Data frame contains list countries alpha-2 aplha-3 codes.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/countrycode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"","code":"countrycode"},{"path":"https://docs.ropensci.org/openalexR/reference/countrycode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"data frame 250 rows 3 variables: Country country names Alpha2 countries' alpha-2 codes Alpha3 countries' alpha-3 codes","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/funders2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of funders' records from list format to data frame — funders2df","title":"Convert OpenAlex collection of funders' records from list format to data frame — funders2df","text":"converts bibliographic collection funders' records gathered OpenAlex database https://openalex.org/ data frame. function converts list funders' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/funders2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of funders' records from list format to data frame — funders2df","text":"","code":"funders2df(   data,   verbose = TRUE,   pb = if (verbose) oa_progress(length(data)) else NULL )"},{"path":"https://docs.ropensci.org/openalexR/reference/funders2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of funders' records from list format to data frame — funders2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE. pb Progress bar object. verbose, computed `oa_progress`. NULL otherwise.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/funders2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of funders' records from list format to data frame — funders2df","text":"data.frame. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/funders2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of funders' records from list format to data frame — funders2df","text":"","code":"if (FALSE) { # \\dontrun{  # Get funders located in Canada with more than 100,000 citations  res <- oa_request(   \"https://api.openalex.org/funders?filter=country_code:ca,cited_by_count:>100000\" )  df <- oa2df(res, entity = \"funders\")  df } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/institutions2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"converts bibliographic collection institutions' records gathered OpenAlex database https://openalex.org/ data frame. function converts list institutions' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/institutions2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"","code":"institutions2df(   data,   verbose = TRUE,   pb = if (verbose) oa_progress(length(data)) else NULL )"},{"path":"https://docs.ropensci.org/openalexR/reference/institutions2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE. pb Progress bar object. verbose, computed `oa_progress`. NULL otherwise.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/institutions2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"data.frame. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/institutions2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of institutions' records from list format to data frame — institutions2df","text":"","code":"if (FALSE) { # \\dontrun{  # Query to search information about all Italian educational institutions  query_inst <- oa_query(   entity = \"institutions\",   country_code = \"it\",   type = \"education\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  oa2df(res, entity = \"institutions\") } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/ngram2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a ","title":"Convert a ","text":"Convert \"Work\" entity's ngram data list data frame","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/ngram2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a ","text":"","code":"ngram2df(ngram)"},{"path":"https://docs.ropensci.org/openalexR/reference/oa2bibliometrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"converts bibliographic collections gathered OpenAlex database https://openalex.org/ bibliometrix data frame (https://bibliometrix.org/) Column names follow https://images.webofknowledge.com/images/help/WOS/hs_wos_fieldtags.html.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa2bibliometrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"","code":"oa2bibliometrix(df)"},{"path":"https://docs.ropensci.org/openalexR/reference/oa2bibliometrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"df bibliographic collection works donwloaded OpenALex.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa2bibliometrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"data.frame class \"bibliometrix\".","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa2bibliometrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"","code":"if (FALSE) { # \\dontrun{  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"works\")  M <- oa2bibliometrix(df) } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/oa2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection from list to data frame — oa2df","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"converts bibliographic collections gathered OpenAlex database https://openalex.org/ data frame. function converts collection records works, authors, institutions, venues concepts obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"","code":"oa2df(   data,   entity,   options = NULL,   count_only = FALSE,   group_by = NULL,   abstract = TRUE,   verbose = TRUE )"},{"path":"https://docs.ropensci.org/openalexR/reference/oa2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"data List. Output oa_request. entity Character. Scholarly entity search. argument can one c(\"works\", \"authors\", \"institutions\", \"concepts\", \"funders\", \"sources\", \"publishers\", \"topics\"). options List. Additional parameters add query. example: - `select` Character vector. Top-level fields show output. Defaults NULL, returns fields. https://docs.openalex.org/--use--api/get-single-entities/select-fields - `sort` Character. Attribute sort . example: \"display_name\" sources \"cited_by_count:desc\" works. See <https://docs.openalex.org/--use--api/get-lists--entities/sort-entity-lists>. - `sample` Integer. Number (random) records return. larger 10,000. Defaults NULL, returns records satisfying query. Read <https://docs.openalex.org/--use--api/get-lists--entities/sample-entity-lists>. - `seed` Integer. seed value order retrieve set random records order used multiple times `sample`. IMPORTANT NOTE: Depending query, random results seed value may change time due new records coming OpenAlex. argument likely useful queries happen close together (within day). count_only Logical. TRUE, function returns number item matching query. Defaults FALSE. group_by Character. Attribute group . example: \"oa_status\" works. See <https://docs.openalex.org/--use--api/get-groups--entities>. abstract Logical. TRUE, function returns also abstract item. Ignored entity different \"works\". Defaults TRUE. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"tibble/dataframe result original OpenAlex result list.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"","code":"if (FALSE) { # \\dontrun{  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-04-30\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  oa2df(res, entity = \"works\") } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_apikey.html","id":null,"dir":"Reference","previous_headings":"","what":"Get apikey from options — oa_apikey","title":"Get apikey from options — oa_apikey","text":"Get apikey options","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_apikey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get apikey from options — oa_apikey","text":"","code":"oa_apikey()"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_apikey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get apikey from options — oa_apikey","text":"Character string. API key requester.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_email.html","id":null,"dir":"Reference","previous_headings":"","what":"Get email from options — oa_email","title":"Get email from options — oa_email","text":"Get email options","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get email from options — oa_email","text":"","code":"oa_email()"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get email from options — oa_email","text":"Character string. Email requester.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_entities.html","id":null,"dir":"Reference","previous_headings":"","what":"Available entities in the OpenAlex database — oa_entities","title":"Available entities in the OpenAlex database — oa_entities","text":"Available entities OpenAlex database","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_entities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available entities in the OpenAlex database — oa_entities","text":"","code":"oa_entities()"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_entities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available entities in the OpenAlex database — oa_entities","text":"Character vector 5 entity options.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_entities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available entities in the OpenAlex database — oa_entities","text":"","code":"oa_entities() #> [1] \"works\"        \"authors\"      \"institutions\" \"concepts\"     \"funders\"      #> [6] \"sources\"      \"publishers\"   \"topics\""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetching records — oa_fetch","title":"Fetching records — oa_fetch","text":"composition function perform query building, requesting, convert result tibble/data frame.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetching records — oa_fetch","text":"","code":"oa_fetch(   entity = if (is.null(identifier)) NULL else id_type(shorten_oaid(identifier[[1]])),   identifier = NULL,   ...,   options = NULL,   search = NULL,   group_by = NULL,   output = c(\"tibble\", \"dataframe\", \"list\", \"raw\"),   abstract = TRUE,   endpoint = \"https://api.openalex.org\",   per_page = 200,   paging = NULL,   pages = NULL,   count_only = FALSE,   mailto = oa_email(),   api_key = oa_apikey(),   verbose = FALSE )"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetching records — oa_fetch","text":"entity Character. Scholarly entity search. argument can one c(\"works\", \"authors\", \"institutions\", \"concepts\", \"funders\", \"sources\", \"publishers\", \"topics\"). provided, `entity` guessed `identifier`. identifier Character. OpenAlex ID(s) item identifier(s). See <https://docs.openalex.org/--use--api/get-single-entities#-openalex-id>. ... Additional filter arguments. options List. Additional parameters add query. example: - `select` Character vector. Top-level fields show output. Defaults NULL, returns fields. https://docs.openalex.org/--use--api/get-single-entities/select-fields - `sort` Character. Attribute sort . example: \"display_name\" sources \"cited_by_count:desc\" works. See <https://docs.openalex.org/--use--api/get-lists--entities/sort-entity-lists>. - `sample` Integer. Number (random) records return. larger 10,000. Defaults NULL, returns records satisfying query. Read <https://docs.openalex.org/--use--api/get-lists--entities/sample-entity-lists>. - `seed` Integer. seed value order retrieve set random records order used multiple times `sample`. IMPORTANT NOTE: Depending query, random results seed value may change time due new records coming OpenAlex. argument likely useful queries happen close together (within day). search Character. Search just another kind filter, one five endpoints support. unlike filters, search require exact match. particularly useful author queries many authors middle names, may exist variety forms. `display_name` filter requires exact match find authors. example, author \"Phillip H. Kuo\" \"Phillip Hsin Kuo\" can found either using search = \"Phillip Kuo\" display_name = c(\"Phillip H. Kuo\", \"Phillip Hsin Kuo\"). filter using search, append .search end attribute filtering . group_by Character. Attribute group . example: \"oa_status\" works. See <https://docs.openalex.org/--use--api/get-groups--entities>. output Character. Type output, one `\"tibble\"`, `\"dataframe\"`, `\"list\"`, `\"raw\"`. \"tibble\": tibble tidy data \"dataframe\": base data.frame tidy data \"list\": list parsed JSON contents \"raw\": list raw JSON strings (length depends query) abstract Logical. TRUE, function returns also abstract item. Default abstract = TRUE. argument ignored entity different \"works\". endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org\". per_page Numeric. Number items download per page. per-page argument can assume number 1 200. Defaults 200. paging Character. Either \"cursor\" cursor paging \"page\" basic paging. used `options$sample` `pages`, paging also automatically set basic paging: `paging = \"page\"` avoid duplicates get right page. See https://docs.openalex.org/--use--api/get-lists--entities/paging. pages Integer vector. range pages return. NULL, return pages. count_only Logical. TRUE, function returns number item matching query. Defaults FALSE. mailto Character string. Gives OpenAlex email enter polite pool. api_key Character string. OpenAlex Premium API key, available. verbose Logical. TRUE, print information querying process. Default verbose = FALSE. shorten printed query URL, set environment variable openalexR.print number characters print: Sys.setenv(openalexR.print = 70).","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetching records — oa_fetch","text":"data.frame list. Result query.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetching records — oa_fetch","text":"","code":"if (FALSE) { # \\dontrun{  paper_meta <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   count_only = TRUE,   abstract = TRUE,   verbose = TRUE )  oa_fetch(   entity = \"works\",   doi = c(     \"10.1371/journal.pone.0266781\",     \"10.1371/journal.pone.0267149\"   ),   verbose = TRUE,   count_only = TRUE )  oa_fetch(   entity = \"works\",   doi = c(     \"10.1371/journal.pone.0266781\",     \"10.1371/journal.pone.0267149\"   ),   options = list(select = c(\"doi\", \"id\", \"cited_by_count\", \"type\")),   verbose = TRUE )  oa_fetch(   identifier = c(\"A5069892096\", \"A5023888391\"),   verbose = TRUE ) } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_generate.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterating through records — oa_generate","title":"Iterating through records — oa_generate","text":"generator making request OpenAlex API Returns one record time.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterating through records — oa_generate","text":"","code":"oa_generate(...)"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterating through records — oa_generate","text":"... arguments passed generator including `query_url`, `mailto`, `api_key`, `verbose`. See `oa_request` details arguments.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_generate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterating through records — oa_generate","text":"Generator function.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_generate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iterating through records — oa_generate","text":"case without group_by, setting `verbose = TRUE` call `oar()` first time give total number records message. group_by, unfortunately way know total query exhausted.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_generate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Iterating through records — oa_generate","text":"","code":"if (require(\"coro\")) {   # Example 1: basic usage getting one record at a time   query_url <- \"https://api.openalex.org/works?filter=cites%3AW1160808132\"   oar <- oa_generate(query_url, verbose = TRUE)   p1 <- oar() # record 1   p2 <- oar() # record 2   p3 <- oar() # record 3   head(p1)   head(p3)    # Example 2: using `coro::loop()` to iterate through the generator   query_url <- \"https://api.openalex.org/works?filter=cited_by%3AW1847168837\"   oar <- oa_generate(query_url)   coro::loop(for (x in oar) {     print(x$id)   })    # Example 3: save records in blocks of 100   query_url <- \"https://api.openalex.org/works?filter=cites%3AW1160808132\"   oar <- oa_generate(query_url)   n <- 100   recs <- vector(\"list\", n)   i <- 0    coro::loop(for (x in oar) {     j <- i %% n + 1     recs[[j]] <- x     if (j == n) {       # saveRDS(recs, sprintf(\"rec-%s.rds\", i %/% n))       recs <- vector(\"list\", n) # reset recs     }     i <- i + 1   })   head(x)   j   # 398 works total, so j = 98 makes sense.    # You can also manually call the generator until exhausted   # using `while (!coro::is_exhausted(record_i))`.   # More details at https://coro.r-lib.org/articles/generator.html.  } #> Loading required package: coro #> Getting record 1 of 483 records... #> Getting record 2 of 483 records... #> Getting record 3 of 483 records... #> [1] \"https://openalex.org/W4248184440\" #> [1] \"https://openalex.org/W1521059904\" #> [1] \"https://openalex.org/W2063977404\" #> [1] \"https://openalex.org/W1987736762\" #> [1] \"https://openalex.org/W2127626512\" #> [1] \"https://openalex.org/W2135732400\" #> [1] 83"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_ngrams.html","id":null,"dir":"Reference","previous_headings":"","what":"Get N-grams of works — oa_ngrams","title":"Get N-grams of works — oa_ngrams","text":"work entities OpenAlex include N-grams (word sequences frequencies) full text. N-grams obtained Internet Archive, uses spaCy parser index scholarly works. See <https://docs.openalex.org/api-entities/works/get-n-grams> coverage technical details.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_ngrams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get N-grams of works — oa_ngrams","text":"","code":"oa_ngrams(   works_identifier,   ...,   endpoint = \"https://api.openalex.org\",   verbose = FALSE )"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_ngrams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get N-grams of works — oa_ngrams","text":"works_identifier Character. OpenAlex ID(s) \"works\" entities item identifier(s). IDs start \"W\". See <https://docs.openalex.org/api-entities/works#id>. ... Unused. endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org\". verbose Logical. TRUE, print information querying process. Default verbose = FALSE. shorten printed query URL, set environment variable openalexR.print number characters print: Sys.setenv(openalexR.print = 70).","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_ngrams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get N-grams of works — oa_ngrams","text":"dataframe paper metadatada list-column ngrams.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_ngrams.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get N-grams of works — oa_ngrams","text":"faster implementation available `curl` >= v5.0.0, `oa_ngrams` issue one-time message . can suppressed `options(\"oa_ngrams.message.curlv5\" = FALSE)`.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_ngrams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get N-grams of works — oa_ngrams","text":"","code":"if (FALSE) { # \\dontrun{  ngrams_data <- oa_ngrams(c(\"W1963991285\", \"W1964141474\"))  # 10 most common ngrams in the first work first_paper_ngrams <- ngrams_data$ngrams[[1]] first_paper_ngrams[   order(first_paper_ngrams$ngram_count, decreasing = TRUE), ][   1:10, ]  # Missing N-grams are `NULL` in the `ngrams` list-column oa_ngrams(\"https://openalex.org/W2284876136\") } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an OpenAlex query from a set of parameters — oa_query","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"generates valid query, written following OpenAlex API Language, set parameters.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"","code":"oa_query(   filter = NULL,   multiple_id = FALSE,   identifier = NULL,   entity = if (is.null(identifier)) NULL else id_type(identifier[[1]]),   options = NULL,   search = NULL,   group_by = NULL,   endpoint = \"https://api.openalex.org\",   verbose = FALSE,   ... )"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"filter Character string. Filters narrow list just entities meet particular condition–specifically, particular value particular attribute. Filters formatted attribute = value. complete list filter attributes entity can found <https://docs.openalex.org/--use--api/get-lists--entities/filter-entity-lists>. example, `cited_by_count = \">100\"`, `title.search = c(\"bibliometric analysis\", \"science mapping\")`, `to_publication_date = \"2021-12-31\"`. multiple_id Logical. Whether multiple identifiers. identifier Character. OpenAlex ID(s) item identifier(s). See <https://docs.openalex.org/--use--api/get-single-entities#-openalex-id>. entity Character. Scholarly entity search. argument can one c(\"works\", \"authors\", \"institutions\", \"concepts\", \"funders\", \"sources\", \"publishers\", \"topics\"). provided, `entity` guessed `identifier`. options List. Additional parameters add query. example: - `select` Character vector. Top-level fields show output. Defaults NULL, returns fields. https://docs.openalex.org/--use--api/get-single-entities/select-fields - `sort` Character. Attribute sort . example: \"display_name\" sources \"cited_by_count:desc\" works. See <https://docs.openalex.org/--use--api/get-lists--entities/sort-entity-lists>. - `sample` Integer. Number (random) records return. larger 10,000. Defaults NULL, returns records satisfying query. Read <https://docs.openalex.org/--use--api/get-lists--entities/sample-entity-lists>. - `seed` Integer. seed value order retrieve set random records order used multiple times `sample`. IMPORTANT NOTE: Depending query, random results seed value may change time due new records coming OpenAlex. argument likely useful queries happen close together (within day). search Character. Search just another kind filter, one five endpoints support. unlike filters, search require exact match. particularly useful author queries many authors middle names, may exist variety forms. `display_name` filter requires exact match find authors. example, author \"Phillip H. Kuo\" \"Phillip Hsin Kuo\" can found either using search = \"Phillip Kuo\" display_name = c(\"Phillip H. Kuo\", \"Phillip Hsin Kuo\"). filter using search, append .search end attribute filtering . group_by Character. Attribute group . example: \"oa_status\" works. See <https://docs.openalex.org/--use--api/get-groups--entities>. endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org\". verbose Logical. TRUE, print information querying process. Default verbose = FALSE. shorten printed query URL, set environment variable openalexR.print number characters print: Sys.setenv(openalexR.print = 70). ... Additional filter arguments.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"character containing query OpenAlex format. extensive information OpenAlex API, please visit: <https://docs.openalex.org>.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"","code":"if (FALSE) { # \\dontrun{  query_auth <- oa_query(identifier = \"A5069892096\", verbose = TRUE)  ### EXAMPLE 1: Full record about an entity.  # Query to obtain allinformation about a particular work/author/institution/etc.:  #  The following paper is associated to the OpenAlex-id W2755950973.  #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  query_work <- oa_query(   identifier = \"W2755950973\",   verbose = TRUE )  #  The author Massimo Aria is associated to the OpenAlex-id A5069892096:  query_auth <- oa_query(identifier = \"A5069892096\", verbose = TRUE)  ### EXAMPLE 2: all works citing a particular work.  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query1 <- oa_query(   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   verbose = TRUE )  ### EXAMPLE 3: All works matching a string in their title  # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in the first half of 2021.  # Results have to be sorted by relevance score in a descending order.  query2 <- oa_query(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-06-30\",   options = list(sort = \"cited_by_count:desc\"),   verbose = TRUE ) } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_random.html","id":null,"dir":"Reference","previous_headings":"","what":"oa_fetch but for a random query — oa_random","title":"oa_fetch but for a random query — oa_random","text":"oa_fetch random query","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"oa_fetch but for a random query — oa_random","text":"","code":"oa_random(   entity = oa_entities(),   output = c(\"tibble\", \"dataframe\", \"list\"),   endpoint = \"https://api.openalex.org\" )"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"oa_fetch but for a random query — oa_random","text":"entity Character. Scholarly entity search. argument can one c(\"works\", \"authors\", \"institutions\", \"concepts\", \"funders\", \"sources\", \"publishers\", \"topics\"). provided, `entity` guessed `identifier`. output Character. Type output, one `\"tibble\"`, `\"dataframe\"`, `\"list\"`, `\"raw\"`. \"tibble\": tibble tidy data \"dataframe\": base data.frame tidy data \"list\": list parsed JSON contents \"raw\": list raw JSON strings (length depends query) endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org\".","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"oa_fetch but for a random query — oa_random","text":"data.frame list. One row one element. Result random query. like select one random entity, say, 10, use `options = list(sample = 10)` argument `oa_fetch`.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"oa_fetch but for a random query — oa_random","text":"","code":"oa_random() #> # A tibble: 1 × 35 #>   id        title display_name author publication_date so    so_id url   pdf_url #>   <chr>     <chr> <chr>        <list> <date>           <chr> <chr> <chr> <lgl>   #> 1 https://… The … The 3of5 we… <df>   2006-03-01       DOAJ… http… http… NA      #> # ℹ 26 more variables: license <lgl>, version <lgl>, first_page <lgl>, #> #   last_page <lgl>, volume <lgl>, issue <lgl>, is_oa <lgl>, #> #   is_oa_anywhere <lgl>, oa_status <chr>, oa_url <chr>, #> #   any_repository_has_fulltext <lgl>, language <chr>, grants <lgl>, #> #   cited_by_count <int>, counts_by_year <lgl>, publication_year <int>, #> #   cited_by_api_url <chr>, ids <list>, doi <lgl>, type <chr>, #> #   referenced_works <lgl>, related_works <list>, is_paratext <lgl>, …"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bibliographic records from OpenAlex database — oa_request","title":"Get bibliographic records from OpenAlex database — oa_request","text":"`oa_request` makes request downloads bibliographic records OpenAlex database https://openalex.org/. function oa_request queries OpenAlex database using query formulated function oa_query.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bibliographic records from OpenAlex database — oa_request","text":"","code":"oa_request(   query_url,   per_page = 200,   paging = \"cursor\",   pages = NULL,   count_only = FALSE,   mailto = oa_email(),   api_key = oa_apikey(),   parse = TRUE,   verbose = FALSE )"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bibliographic records from OpenAlex database — oa_request","text":"query_url Character string. search query formulated using OpenAlex API language can generated oa_query. per_page Numeric. Number items download per page. per-page argument can assume number 1 200. Defaults 200. paging Character. Either \"cursor\" cursor paging \"page\" basic paging. used `options$sample` `pages`, paging also automatically set basic paging: `paging = \"page\"` avoid duplicates get right page. See https://docs.openalex.org/--use--api/get-lists--entities/paging. pages Integer vector. range pages return. NULL, return pages. count_only Logical. TRUE, function returns number item matching query. Defaults FALSE. mailto Character string. Gives OpenAlex email enter polite pool. api_key Character string. OpenAlex Premium API key, available. parse Logical. FALSE, returns raw JSON response string. verbose Logical. TRUE, print information querying process. Defaults TRUE.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bibliographic records from OpenAlex database — oa_request","text":"data.frame list bibliographic records. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bibliographic records from OpenAlex database — oa_request","text":"","code":"if (FALSE) { # \\dontrun{  ### EXAMPLE 1: Full record about an entity.  # Query to obtain all information about a particular work/author/institution/etc.:  #  The following paper is associated to the OpenAlex-id W2755950973.  #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  res <- oa_request(query_url = \"https://api.openalex.org/works/W2755950973\")  #  The author Massimo Aria is associated to the OpenAlex-id A5069892096.  query_author <- oa_query(   identifier = \"A5069892096\",   entity = \"authors\" ) query_author res <- oa_request(   query_url = query_author,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 2: all works citing a particular work.  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query2 <- oa_query(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-12-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org\" )  res2 <- oa_request(   query_url = query2,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 3: All works matching a string in their title  # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in 2020 or 2021.  # Results have to be sorted by relevance score in a descending order.   query3 <- oa_query(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   from_publication_date = \"2021-12-01\",   to_publication_date = \"2021-12-31\" )  res3 <- oa_request(   query_url = query3,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 4: How to check how many works match a query # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in 2020 or 2021.  # Query only to know how many works could be retrieved (count_only=TRUE)  query4 <- oa_query(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\" )  res4 <- oa_request(   query_url = query4,   count_only = TRUE,   verbose = FALSE )  res4$count # number of items retrieved by our query } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_snowball.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to perform a snowball search and convert the result to a tibble/data frame. — oa_snowball","title":"A function to perform a snowball search and convert the result to a tibble/data frame. — oa_snowball","text":"function perform snowball search convert result tibble/data frame.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_snowball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to perform a snowball search and convert the result to a tibble/data frame. — oa_snowball","text":"","code":"oa_snowball(   identifier = NULL,   ...,   id_type = c(\"short\", \"original\"),   mailto = oa_email(),   endpoint = \"https://api.openalex.org\",   verbose = FALSE,   citing_params = list(),   cited_by_params = list() )"},{"path":"https://docs.ropensci.org/openalexR/reference/oa_snowball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to perform a snowball search and convert the result to a tibble/data frame. — oa_snowball","text":"identifier Character vector openalex identifiers. ... Additional arguments pass `oa_fetch` querying input works, `doi`. id_type Type OpenAlex IDs return. Defaults \"short\", remove prefix https://openalex.org/ works' IDs, example, W2755950973. \"original\", OpenAlex IDs kept , example, https://openalex.org/W2755950973 mailto Character string. Gives OpenAlex email enter polite pool. endpoint Character. URL OpenAlex Endpoint API server. Defaults endpoint = \"https://api.openalex.org\". verbose Logical. TRUE, print information querying process. Default verbose = FALSE. shorten printed query URL, set environment variable openalexR.print number characters print: Sys.setenv(openalexR.print = 70). citing_params parameters used search works citing input works. cited_by_params parameters used search works cited input works.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_snowball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to perform a snowball search and convert the result to a tibble/data frame. — oa_snowball","text":"list containing 2 elements: - nodes: dataframe publication records. last column `oa_input` indicates whether work one input `identifier`(s). - edges: publication link dataframe 2 columns `, ` row `, B` means -> B means cites B. bibliometrics, \"citation action\" comes B.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/oa_snowball.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to perform a snowball search and convert the result to a tibble/data frame. — oa_snowball","text":"","code":"if (FALSE) { # \\dontrun{  snowball_docs <- oa_snowball(   identifier = c(\"W2741809807\", \"W2755950973\"),   citing_params = list(from_publication_date = \"2022-01-01\"),   cited_by_params = list(),   verbose = TRUE )  # Identical to above, but searches using paper DOIs snowball_docs_doi <- oa_snowball(   doi = c(\"10.1016/j.joi.2017.08.007\", \"10.7717/peerj.4375\"),   citing_params = list(from_publication_date = \"2022-01-01\"),   cited_by_params = list(),   verbose = TRUE )  } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/openalexR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","title":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","text":"set tools extract bibliographic content 'OpenAlex' database using API https://docs.openalex.org.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/openalexR/reference/openalexR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","text":"Maintainer: Massimo Aria aria@unina.(ORCID) [copyright holder] Authors: Trang Le grixor@gmail.com (ORCID) June Choe jchoe001@gmail.com (ORCID) contributors: Corrado Cuccurullo cuccurullocorrado@gmail.com (ORCID) [contributor]","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/process_topics.html","id":null,"dir":"Reference","previous_headings":"","what":"Process topics — process_topics","title":"Process topics — process_topics","text":"Process topics","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/process_topics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process topics — process_topics","text":"","code":"process_topics(entity, extra)"},{"path":"https://docs.ropensci.org/openalexR/reference/process_topics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process topics — process_topics","text":"entity List. One single work author process. extra Character. Either \"score\" (work) \"count\" (author).","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/process_topics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process topics — process_topics","text":"List. list one tibble processed topics.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/publishers2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of publishers' records from list format to data frame — publishers2df","title":"Convert OpenAlex collection of publishers' records from list format to data frame — publishers2df","text":"converts bibliographic collection publishers' records gathered OpenAlex database https://openalex.org/ data frame. function converts list publishers' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/publishers2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of publishers' records from list format to data frame — publishers2df","text":"","code":"publishers2df(   data,   verbose = TRUE,   pb = if (verbose) oa_progress(length(data)) else NULL )"},{"path":"https://docs.ropensci.org/openalexR/reference/publishers2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of publishers' records from list format to data frame — publishers2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE. pb Progress bar object. verbose, computed `oa_progress`. NULL otherwise.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/publishers2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of publishers' records from list format to data frame — publishers2df","text":"data.frame. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/publishers2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of publishers' records from list format to data frame — publishers2df","text":"","code":"if (FALSE) { # \\dontrun{  # Get publishers located in Canada with more than 100,000 citations  res <- oa_request(   \"https://api.openalex.org/publishers?filter=country_codes:ca\" )  df <- oa2df(res, entity = \"publishers\")  df } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/show_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the OpenAlex authors result — show_authors","title":"Simplify the OpenAlex authors result — show_authors","text":"function mostly package's internal use, export can try . However, expect likely write function simplify result however want.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/show_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the OpenAlex authors result — show_authors","text":"","code":"show_authors(x, simp_func = utils::head)"},{"path":"https://docs.ropensci.org/openalexR/reference/show_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the OpenAlex authors result — show_authors","text":"x Dataframe/tibble. Result OpenAlex query authors already converted dataframe/tibble. simp_func R function simplify result. Default `head`. want entire table, set `simp_fun = identity`","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/show_authors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the OpenAlex authors result — show_authors","text":"Simplified tibble display. first column, `id` short-form OpenAlex ID authors.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/show_authors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify the OpenAlex authors result — show_authors","text":"","code":"show_authors(oa_fetch(   identifier = c(\"A5023888391\", \"A5014077037\"),   verbose = TRUE )) #> Requesting url: https://api.openalex.org/authors?filter=openalex%3AA5023888391%7CA5014077037 #> Getting 1 page of results with a total of 2 records... #> # A tibble: 2 × 7 #>   id        display_name orcid works_count cited_by_count affiliation_display_…¹ #>   <chr>     <chr>        <chr>       <int>          <int> <chr>                  #> 1 A5014077… Stefanie Ha… 0000…         215           7200 University of Ottawa   #> 2 A5023888… Jason Priem  0000…          62           3693 OurResearch            #> # ℹ abbreviated name: ¹​affiliation_display_name #> # ℹ 1 more variable: top_concepts <chr>"},{"path":"https://docs.ropensci.org/openalexR/reference/show_works.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the OpenAlex works result — show_works","title":"Simplify the OpenAlex works result — show_works","text":"function mostly package's internal use, export can try . However, expect likely write function simplify result however want.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/show_works.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the OpenAlex works result — show_works","text":"","code":"show_works(x, simp_func = utils::head)"},{"path":"https://docs.ropensci.org/openalexR/reference/show_works.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the OpenAlex works result — show_works","text":"x Dataframe/tibble. Result OpenAlex query authors already converted dataframe/tibble. simp_func R function simplify result. Default `head`. want entire table, set `simp_fun = identity`.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/show_works.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the OpenAlex works result — show_works","text":"Simplified tibble display. first column, `id` short-form OpenAlex ID works","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/show_works.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify the OpenAlex works result — show_works","text":"","code":"show_works(oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   verbose = TRUE )) #> Requesting url: https://api.openalex.org/works?filter=openalex%3AW2741809807%7CW2755950973 #> Getting 1 page of results with a total of 2 records... #> # A tibble: 2 × 8 #>   id        display_name first_author last_author so    url   is_oa top_concepts #>   <chr>     <chr>        <chr>        <chr>       <chr> <chr> <lgl> <chr>        #> 1 W2755950… bibliometri… Massimo Aria Corrado Cu… Jour… http… FALSE Workflow, B… #> 2 W2741809… The state o… Heather Piw… Stefanie H… PeerJ http… TRUE  Citation, L…"},{"path":"https://docs.ropensci.org/openalexR/reference/snowball2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten snowball result — snowball2df","title":"Flatten snowball result — snowball2df","text":"|  id|title |...|cited_by_count| referenced_works   |cited_by |...| | 100|foo   |...|             1| 98, 99             |101      |...| | 200|bar   |...|             2| 198, 199           |201, 202 |...| | 300|wug   |...|             2| 296, 297, 298, 299 |301, 302 |...|","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/snowball2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten snowball result — snowball2df","text":"","code":"snowball2df(data, verbose = FALSE)"},{"path":"https://docs.ropensci.org/openalexR/reference/snowball2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten snowball result — snowball2df","text":"data List result `oa_snowball`. verbose Logical. TRUE, print information wrangling process.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/snowball2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten snowball result — snowball2df","text":"Tibble/data.frame works additional columns: append `citing`, `backward_count`, `cited_by`, `forward_count`, `connection`, `connection_count.` work/row, counts WITHIN one data search, `forward_count` <= `cited_by_count`. Consider universe works linked set starting works, (`oa_input = TRUE`) work/row : - citing: works universe cites - backward_count: number works universe cites - cited_by: works cited - forward_count: number works universe cited - connection: works universe linked - connection_count: number works universe linked (degree )","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/snowball2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten snowball result — snowball2df","text":"","code":"if (FALSE) { # \\dontrun{ flat_snow <- snowball2df(oa_snowball(   identifier = \"W1516819724\",   verbose = TRUE ))  flat_snow[, c(\"id\", \"connection\", \"connection_count\")] } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/sources2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of sources' records from list format to data frame — sources2df","title":"Convert OpenAlex collection of sources' records from list format to data frame — sources2df","text":"converts bibliographic collection sources' records gathered OpenAlex database https://openalex.org/ data frame. function converts list sources' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/sources2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of sources' records from list format to data frame — sources2df","text":"","code":"sources2df(   data,   verbose = TRUE,   pb = if (verbose) oa_progress(length(data)) else NULL )"},{"path":"https://docs.ropensci.org/openalexR/reference/sources2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of sources' records from list format to data frame — sources2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE. pb Progress bar object. verbose, computed `oa_progress`. NULL otherwise.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/sources2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of sources' records from list format to data frame — sources2df","text":"data.frame. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/sources2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of sources' records from list format to data frame — sources2df","text":"","code":"if (FALSE) { # \\dontrun{  # Get sources from Nature  res <- oa_request(   \"https://api.openalex.org/sources?search=nature\" )  df <- oa2df(res, entity = \"sources\")  df } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/topics2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of topics' records from list format to data frame — topics2df","title":"Convert OpenAlex collection of topics' records from list format to data frame — topics2df","text":"converts collection topics' records gathered OpenAlex database. function converts list topics' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/topics2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of topics' records from list format to data frame — topics2df","text":"","code":"topics2df(   data,   verbose = TRUE,   pb = if (verbose) oa_progress(length(data)) else NULL )"},{"path":"https://docs.ropensci.org/openalexR/reference/topics2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of topics' records from list format to data frame — topics2df","text":"data List. Output oa_request. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE. pb Progress bar object. verbose, computed `oa_progress`. NULL otherwise.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/topics2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of topics' records from list format to data frame — topics2df","text":"data.frame. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/topics2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of topics' records from list format to data frame — topics2df","text":"","code":"if (FALSE) { # \\dontrun{  # Query to search information about all Italian educational institutions   query_inst <- oa_query(   entity = \"topics\",   display_name.search = \"electrodynamics\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"topics\")  df } # }"},{"path":"https://docs.ropensci.org/openalexR/reference/works2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of works from list format to data frame — works2df","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"converts bibliographic collection works gathered OpenAlex database https://openalex.org/ data frame. function converts list works obtained using oa_request data frame/tibble.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/works2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"","code":"works2df(   data,   abstract = TRUE,   verbose = TRUE,   pb = if (verbose) oa_progress(length(data)) else NULL )"},{"path":"https://docs.ropensci.org/openalexR/reference/works2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"data List. Output oa_request. abstract Logical. TRUE, function returns also abstract item. Defaults TRUE. verbose Logical. TRUE, print information dataframe conversion process. Defaults TRUE. pb Progress bar object. verbose, computed `oa_progress`. NULL otherwise.","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/works2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"data.frame. extensive information OpenAlex API, please visit: <https://docs.openalex.org>","code":""},{"path":"https://docs.ropensci.org/openalexR/reference/works2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of works from list format to data frame — works2df","text":"","code":"if (FALSE) { # \\dontrun{  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"works\")  df } # }"},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-140","dir":"Changelog","previous_headings":"","what":"openalexR 1.4.0","title":"openalexR 1.4.0","text":"CRAN release: 2024-07-11 “topics” now valid entity oa_fetch column “topics” replaces concepts entities’ returned dataframes Works, “topics” “concepts” now returned separate columns","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-131","dir":"Changelog","previous_headings":"","what":"openalexR 1.3.1","title":"openalexR 1.3.1","text":"CRAN release: 2024-05-08 solved bug au_affiliation_raw PR#241","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-130","dir":"Changelog","previous_headings":"","what":"openalexR 1.3.0","title":"openalexR 1.3.0","text":"CRAN release: 2024-05-03 Breaking change: two arguments oa_snowball renamed: citing_filter now citing_params, cited_by_filter now cited_by_params. Introduced oa_generate: generator function make request OpenAlex API returns one record time. Fixed queries group_by. Improved paging control: user can now specify pages want oa_fetch oa_request. Improve oa_snowball performance. Allowed use options$sample search. “venues”” longer valid value entity. Use “sources” instead.","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-122","dir":"Changelog","previous_headings":"","what":"openalexR 1.2.2","title":"openalexR 1.2.2","text":"CRAN release: 2023-09-24 solved issue CRAN test","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-121","dir":"Changelog","previous_headings":"","what":"openalexR 1.2.1","title":"openalexR 1.2.1","text":"CRAN release: 2023-09-01 many improvements bibliometrix support solved issue CRAN test","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-120","dir":"Changelog","previous_headings":"","what":"openalexR 1.2.0","title":"openalexR 1.2.0","text":"CRAN release: 2023-08-08 many improvements oa_snowball added new openalex entities solved CRAN issue packageVersion()","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-110","dir":"Changelog","previous_headings":"","what":"openalexR 1.1.0","title":"openalexR 1.1.0","text":"CRAN release: 2023-05-04 Basic paging applied using options$sample Bug fixes rbind oa2df","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-1029","dir":"Changelog","previous_headings":"","what":"openalexR 1.0.2.9","title":"openalexR 1.0.2.9","text":"CRAN release: 2023-04-01 Breaking change: Reorder first two arguments oa_fetch: entity now comes idenfitifier. affect workflow much unless getting article information OpenAlex IDs. new arguments oa_fetch: sample seed allows user download random subset entities instead entire set. oa_ngrams gets N-grams works abstract now defaults TRUE avoid issues. New argument oa_fetch: api_key Arguments sample, seed, sort, select now grouped options. Bug fixes Improved documentation: group functions Reference, details search, etc.","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-101","dir":"Changelog","previous_headings":"","what":"openalexR 1.0.1","title":"openalexR 1.0.1","text":"Improve snowball #9. Batch queries filter 50 values #18. Bug fixes. Added NEWS.md file track changes package.","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-100","dir":"Changelog","previous_headings":"","what":"openalexR 1.0.0","title":"openalexR 1.0.0","text":"CRAN release: 2022-10-06 Breaking change: now uses canonical way filter #7. oa_fetch, abstract now defaults FALSE save compute/query time/space. need set abstract = TRUE retrieve abstracts articles. Added website, hex. Added tests. Added R CMD CHECK GH Action Bug fixes. Added vignettes.","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-002","dir":"Changelog","previous_headings":"","what":"openalexR 0.0.2","title":"openalexR 0.0.2","text":"bug fixes","code":""},{"path":"https://docs.ropensci.org/openalexR/news/index.html","id":"openalexr-001","dir":"Changelog","previous_headings":"","what":"openalexR 0.0.1","title":"openalexR 0.0.1","text":"CRAN release: 2022-04-22 First CRAN release","code":""}]
